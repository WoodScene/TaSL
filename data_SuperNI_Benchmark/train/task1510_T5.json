[
    {
        "id": "task1510-374dccc448db49e7b82edff0b6a85b78",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is part of library\n [OUT] ",
        "output": "book PartOf library",
        "data_id": 0
    },
    {
        "id": "task1510-6a2a92bfdc564047a13514cf47e531c9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed is a kind of plot\n [OUT] ",
        "output": "bed IsA plot",
        "data_id": 1
    },
    {
        "id": "task1510-a39a0d7e81d445d49ddab8ea99a161b6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break is a kind of escape\n [OUT] ",
        "output": "break IsA escape",
        "data_id": 2
    },
    {
        "id": "task1510-b3ed69e58af1487a8a1c214fb27f7a0b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring can be used as the opposite of leave\n [OUT] ",
        "output": "bring Antonym leave",
        "data_id": 3
    },
    {
        "id": "task1510-0ecee57891d94b058ac33b2edab398eb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action is a kind of work\n [OUT] ",
        "output": "action IsA work",
        "data_id": 4
    },
    {
        "id": "task1510-e48bfc4077534da3a9e4e09b640c372f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bear can have or can contain claw\n [OUT] ",
        "output": "bear HasA claw",
        "data_id": 5
    },
    {
        "id": "task1510-f4438274c9a649439604814cd6dca401",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] age is a kind of change\n [OUT] ",
        "output": "age IsA change",
        "data_id": 6
    },
    {
        "id": "task1510-da1acb480cbb46d7bf8c5f833e931cfc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used as the opposite of magazine\n [OUT] ",
        "output": "book Antonym magazine",
        "data_id": 7
    },
    {
        "id": "task1510-70c286195bf84949ab9d16546afc0a44",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad is a kind of quality\n [OUT] ",
        "output": "bad IsA quality",
        "data_id": 8
    },
    {
        "id": "task1510-acf79ec6e6c842168a32f069f27a7a6f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bee is a kind of insect\n [OUT] ",
        "output": "bee IsA insect",
        "data_id": 9
    },
    {
        "id": "task1510-c5d782e4fbe24a5582e9f09c1b092df1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] annoy can be used as the opposite of please\n [OUT] ",
        "output": "annoy Antonym please",
        "data_id": 10
    },
    {
        "id": "task1510-a8db068459ec401b8144be46b2dbb14c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bow can have or can contain knot\n [OUT] ",
        "output": "bow HasA knot",
        "data_id": 11
    },
    {
        "id": "task1510-0a27948409984c45b1bc5b816fdae31a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball can be characterized by nice\n [OUT] ",
        "output": "baseball HasProperty nice",
        "data_id": 12
    },
    {
        "id": "task1510-f8d028013d66440c87dc0e7d234c063e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can have or can contain egg\n [OUT] ",
        "output": "bird HasA egg",
        "data_id": 13
    },
    {
        "id": "task1510-42e515df007f4147af2ea7bdc50dffc2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue can be used as the opposite of red\n [OUT] ",
        "output": "blue Antonym red",
        "data_id": 14
    },
    {
        "id": "task1510-abcdb9c06055467e8a12aa1fb01db4f5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be characterized by soft\n [OUT] ",
        "output": "bed HasProperty soft",
        "data_id": 15
    },
    {
        "id": "task1510-60e849715e344041b168d9718bb8b04f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain knowledge\n [OUT] ",
        "output": "book HasA knowledge",
        "data_id": 16
    },
    {
        "id": "task1510-a22d359db6ba4772b29709f001cac1b9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] add is a kind of increase\n [OUT] ",
        "output": "add IsA increase",
        "data_id": 17
    },
    {
        "id": "task1510-f65233b244d64baaa39b281d185efbc3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be characterized by strong\n [OUT] ",
        "output": "bone HasProperty strong",
        "data_id": 18
    },
    {
        "id": "task1510-f2fa32c4fe494c3981cf0ba48019d696",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby is a kind of mammal\n [OUT] ",
        "output": "baby IsA mammal",
        "data_id": 19
    },
    {
        "id": "task1510-23fce730fb134524a8cbcbded32d4d9d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can have or can contain bath\n [OUT] ",
        "output": "bathroom HasA bath",
        "data_id": 20
    },
    {
        "id": "task1510-b13454e1442c4a8ebddfeba7d575f774",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss can be used with the same meaning of mate\n [OUT] ",
        "output": "boss Synonym mate",
        "data_id": 21
    },
    {
        "id": "task1510-1d23866a19884ff49ea71a93bd5e8f42",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad can be used as the opposite of right\n [OUT] ",
        "output": "bad Antonym right",
        "data_id": 22
    },
    {
        "id": "task1510-a9bc6e501971410a83606a8a99fe8a2c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beach can be characterized by nice\n [OUT] ",
        "output": "beach HasProperty nice",
        "data_id": 23
    },
    {
        "id": "task1510-bfe7219accdd434e97c20c7e8af43e23",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird is a kind of pet\n [OUT] ",
        "output": "bird IsA pet",
        "data_id": 24
    },
    {
        "id": "task1510-4b4ca31087aa4b4ca403e43918a98884",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beak is a kind of nose\n [OUT] ",
        "output": "beak IsA nose",
        "data_id": 25
    },
    {
        "id": "task1510-16345ab9b6924ecb99e45f310681f653",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can have or can contain claw\n [OUT] ",
        "output": "bird HasA claw",
        "data_id": 26
    },
    {
        "id": "task1510-8052d7a13e68497da5af6846b47d3653",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belt is part of machine\n [OUT] ",
        "output": "belt PartOf machine",
        "data_id": 27
    },
    {
        "id": "task1510-80fd30de0923412fb7b3ac4d23e2ca34",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance is a kind of match\n [OUT] ",
        "output": "balance IsA match",
        "data_id": 28
    },
    {
        "id": "task1510-a19ca8b29b9b4784a91e860e89c9a4f9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is a kind of literature\n [OUT] ",
        "output": "book IsA literature",
        "data_id": 29
    },
    {
        "id": "task1510-9126c0f2e0274e29945e8e02959ec5ee",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birthday can be used as the opposite of death\n [OUT] ",
        "output": "birthday Antonym death",
        "data_id": 30
    },
    {
        "id": "task1510-42b9882cee0749b9864b17bed77d5f7f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used as the opposite of tear\n [OUT] ",
        "output": "build Antonym tear",
        "data_id": 31
    },
    {
        "id": "task1510-41e233ee6a14474ca5e3b2b4d3c344c2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle can have or can contain beer\n [OUT] ",
        "output": "bottle HasA beer",
        "data_id": 32
    },
    {
        "id": "task1510-70bbcf17ace346c9b24d2049332d30d9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beauty is a kind of person\n [OUT] ",
        "output": "beauty IsA person",
        "data_id": 33
    },
    {
        "id": "task1510-b90045b9c22e4d66a343f2cae10fe1c3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring can be used as the opposite of take\n [OUT] ",
        "output": "bring Antonym take",
        "data_id": 34
    },
    {
        "id": "task1510-9d7228e360ed44f6922b820a3888ef1b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball can be characterized by fun\n [OUT] ",
        "output": "ball HasProperty fun",
        "data_id": 35
    },
    {
        "id": "task1510-fec7e59319c24897a355160c1cf0eef8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bind can be used with the same meaning of fasten\n [OUT] ",
        "output": "bind Synonym fasten",
        "data_id": 36
    },
    {
        "id": "task1510-5e4d6b04639b43ffaf5da619a3510633",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt can be used as the opposite of nail\n [OUT] ",
        "output": "bolt Antonym nail",
        "data_id": 37
    },
    {
        "id": "task1510-41758c0daead4e36b046be26e1133ac0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] admire is a kind of look\n [OUT] ",
        "output": "admire IsA look",
        "data_id": 38
    },
    {
        "id": "task1510-3e3b96e1cacf46bc8f7c1e3d59e7f498",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basement is a kind of place\n [OUT] ",
        "output": "basement IsA place",
        "data_id": 39
    },
    {
        "id": "task1510-14040dd8b4f546bea2b02166aa2c99b3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adult can be used as the opposite of child\n [OUT] ",
        "output": "adult Antonym child",
        "data_id": 40
    },
    {
        "id": "task1510-f36859e05d5d4a73a81765fc7fd1b4df",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] article can have or can contain news\n [OUT] ",
        "output": "article HasA news",
        "data_id": 41
    },
    {
        "id": "task1510-3511e7b6b35f482d980cf73336d3fd08",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is a kind of object\n [OUT] ",
        "output": "book IsA object",
        "data_id": 42
    },
    {
        "id": "task1510-87319f7d8aa44171b8fadca13ae8f1ef",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] answer can be used as the opposite of problem\n [OUT] ",
        "output": "answer Antonym problem",
        "data_id": 43
    },
    {
        "id": "task1510-b93bf23ae7a94463a22ee9f3803272ed",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] be_alone is a kind of choice\n [OUT] ",
        "output": "be_alone IsA choice",
        "data_id": 44
    },
    {
        "id": "task1510-44d380eb4d2b470f9b1c3d36fc520241",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss can be used with the same meaning of leader\n [OUT] ",
        "output": "boss Synonym leader",
        "data_id": 45
    },
    {
        "id": "task1510-4ad702f8e5ed467eaa0d316926cce828",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain eye\n [OUT] ",
        "output": "animal HasA eye",
        "data_id": 46
    },
    {
        "id": "task1510-ba54ea3589c44d748aaad97b6a459f03",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anchor is part of vessel\n [OUT] ",
        "output": "anchor PartOf vessel",
        "data_id": 47
    },
    {
        "id": "task1510-78f42440d7ef4ca79ef443ef931668a9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by engage\n [OUT] ",
        "output": "book HasProperty engage",
        "data_id": 48
    },
    {
        "id": "task1510-caac0e9fabfc442e9bcb7f44b9843f86",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] airplane is a kind of machine\n [OUT] ",
        "output": "airplane IsA machine",
        "data_id": 49
    },
    {
        "id": "task1510-d0b868bad5eb4198a218b6fdb73d9c08",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basket is a kind of container\n [OUT] ",
        "output": "basket IsA container",
        "data_id": 50
    },
    {
        "id": "task1510-ec749c2632d24cd69b0d37ae620a5dd4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn is a kind of pain\n [OUT] ",
        "output": "burn IsA pain",
        "data_id": 51
    },
    {
        "id": "task1510-fc6b9ae5f02f43e69114bfb7e2cac30f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act is a kind of pretend\n [OUT] ",
        "output": "act IsA pretend",
        "data_id": 52
    },
    {
        "id": "task1510-0e926cb3af034594b060fe01ba1d6dc5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] antique can be characterized by old\n [OUT] ",
        "output": "antique HasProperty old",
        "data_id": 53
    },
    {
        "id": "task1510-3937a9caa11c41c3b6ce58e095ddeed3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] base is part of baseball_diamond\n [OUT] ",
        "output": "base PartOf baseball_diamond",
        "data_id": 54
    },
    {
        "id": "task1510-22157b612d9c41698cf9d839dcb31045",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bill can have or can contain number\n [OUT] ",
        "output": "bill HasA number",
        "data_id": 55
    },
    {
        "id": "task1510-09ff258801de4f168c4d0b6ea9a6c302",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blood is part of body\n [OUT] ",
        "output": "blood PartOf body",
        "data_id": 56
    },
    {
        "id": "task1510-85eaa3b1833c4d2fab02209725f3753b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain sentence\n [OUT] ",
        "output": "book HasA sentence",
        "data_id": 57
    },
    {
        "id": "task1510-4da40f83a45b4fee922b4a6f1ab19685",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can have or can contain peel\n [OUT] ",
        "output": "apple HasA peel",
        "data_id": 58
    },
    {
        "id": "task1510-bcafdb8d62a1418895f02d252ee18e3d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bike is a kind of sport\n [OUT] ",
        "output": "bike IsA sport",
        "data_id": 59
    },
    {
        "id": "task1510-af30bfd788874802a8721c57ae49f200",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bike can be characterized by fun\n [OUT] ",
        "output": "bike HasProperty fun",
        "data_id": 60
    },
    {
        "id": "task1510-8df7d1c25a8445bda5e52f952bb938ac",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach is a kind of join\n [OUT] ",
        "output": "attach IsA join",
        "data_id": 61
    },
    {
        "id": "task1510-35cc603f51904bcdab54614105fbed80",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bite is a kind of grip\n [OUT] ",
        "output": "bite IsA grip",
        "data_id": 62
    },
    {
        "id": "task1510-10707bed4a854c8ea363e6afc574870a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] banana can be characterized by green\n [OUT] ",
        "output": "banana HasProperty green",
        "data_id": 63
    },
    {
        "id": "task1510-1df155bab8d54da7a869a8be45aad9b5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance can be used with the same meaning of scale\n [OUT] ",
        "output": "balance Synonym scale",
        "data_id": 64
    },
    {
        "id": "task1510-6438913377814276884cd5e9ff21bf29",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread is made of flour\n [OUT] ",
        "output": "bread MadeOf flour",
        "data_id": 65
    },
    {
        "id": "task1510-b4639ff2c5eb46a198a8f085efcb8667",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby is a kind of child\n [OUT] ",
        "output": "baby IsA child",
        "data_id": 66
    },
    {
        "id": "task1510-aa40e2b5516841888cd7dc62641760df",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act is a kind of perform\n [OUT] ",
        "output": "act IsA perform",
        "data_id": 67
    },
    {
        "id": "task1510-261b6409b05e45bca4cf1ea866ad18a5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Appear can be used with the same meaning of arrive\n [OUT] ",
        "output": "appear Synonym arrive",
        "data_id": 68
    },
    {
        "id": "task1510-1389a24af8c64150810b95caba57841c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] accident can be used as the opposite of purpose\n [OUT] ",
        "output": "accident Antonym purpose",
        "data_id": 69
    },
    {
        "id": "task1510-5a41d882ac3b45438e145e24372cbc7b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] active is a kind of person\n [OUT] ",
        "output": "active IsA person",
        "data_id": 70
    },
    {
        "id": "task1510-a1c410cefa0f4f0c9f15932dec1bd092",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atom is made of neutron\n [OUT] ",
        "output": "atom MadeOf neutron",
        "data_id": 71
    },
    {
        "id": "task1510-7ed1e39e6e0d4e9eb2fef9ed52f268b7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beautiful can be used as the opposite of ugly\n [OUT] ",
        "output": "beautiful Antonym ugly",
        "data_id": 72
    },
    {
        "id": "task1510-7bb6d53584344ec189e6a1e4541c01c0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] armchair can have or can contain back\n [OUT] ",
        "output": "armchair HasA back",
        "data_id": 73
    },
    {
        "id": "task1510-a761f170dea844b48ca374fb7307890a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed is a kind of device\n [OUT] ",
        "output": "bed IsA device",
        "data_id": 74
    },
    {
        "id": "task1510-acf5410ec94c4fc2857c942b2e8a70b0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break is a kind of happen\n [OUT] ",
        "output": "break IsA happen",
        "data_id": 75
    },
    {
        "id": "task1510-d4a7f6bdd8ee4e8fa350762a2d67db92",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body_part is part of organism\n [OUT] ",
        "output": "body_part PartOf organism",
        "data_id": 76
    },
    {
        "id": "task1510-f748b3da37a240e4801f350d89dd897e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of work\n [OUT] ",
        "output": "break Antonym work",
        "data_id": 77
    },
    {
        "id": "task1510-e14612dea9ce4dbc9dfdb790a8776fef",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affair can be used as the opposite of marriage\n [OUT] ",
        "output": "affair Antonym marriage",
        "data_id": 78
    },
    {
        "id": "task1510-06d5de233dc34bb6b18599830c3421af",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is a kind of game\n [OUT] ",
        "output": "bridge IsA game",
        "data_id": 79
    },
    {
        "id": "task1510-26fae97f77884c00a5cc8ed1cf4c867a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss is a kind of leader\n [OUT] ",
        "output": "boss IsA leader",
        "data_id": 80
    },
    {
        "id": "task1510-32b321f4f48b4919ad4d3977f635d2cc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed is a kind of surface\n [OUT] ",
        "output": "bed IsA surface",
        "data_id": 81
    },
    {
        "id": "task1510-4029ec96cfb54d68970411929d235373",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain muscle\n [OUT] ",
        "output": "animal HasA muscle",
        "data_id": 82
    },
    {
        "id": "task1510-e4ac992931104487890aa08acb4ae712",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy can be used as the opposite of female\n [OUT] ",
        "output": "boy Antonym female",
        "data_id": 83
    },
    {
        "id": "task1510-b43989aca81040bab6814bb4cd6b356d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment is a kind of house\n [OUT] ",
        "output": "apartment IsA house",
        "data_id": 84
    },
    {
        "id": "task1510-9e07ca9e60024021ba328caaad033e28",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain text\n [OUT] ",
        "output": "book HasA text",
        "data_id": 85
    },
    {
        "id": "task1510-12aa34500bbc49c1b8e60b80d14490a1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge can be characterized by big\n [OUT] ",
        "output": "bridge HasProperty big",
        "data_id": 86
    },
    {
        "id": "task1510-7c35665da7d2431a98158947f33aef49",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atom is part of molecule\n [OUT] ",
        "output": "atom PartOf molecule",
        "data_id": 87
    },
    {
        "id": "task1510-9cb6e937c81146babbf89f81723b6658",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin can be used as the opposite of stop\n [OUT] ",
        "output": "begin Antonym stop",
        "data_id": 88
    },
    {
        "id": "task1510-94067a92f3aa4b67b73c782f84aae246",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of exercise\n [OUT] ",
        "output": "action Synonym exercise",
        "data_id": 89
    },
    {
        "id": "task1510-90dc1c1fc95442619366995adbf688ae",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat can be characterized by fast\n [OUT] ",
        "output": "boat HasProperty fast",
        "data_id": 90
    },
    {
        "id": "task1510-4946af0bb9624e4b8127b672f343fa5c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by good\n [OUT] ",
        "output": "apple HasProperty good",
        "data_id": 91
    },
    {
        "id": "task1510-d78f40c578b34be89fe2fc9bfc2fb044",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball_diamond is a kind of place\n [OUT] ",
        "output": "baseball_diamond IsA place",
        "data_id": 92
    },
    {
        "id": "task1510-2e0358baf7ea4c5da91d52c84aa2560e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer can be characterized by bitter\n [OUT] ",
        "output": "beer HasProperty bitter",
        "data_id": 93
    },
    {
        "id": "task1510-fcbe0c9930564f63b1be71743722a47d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] active can be used as the opposite of quiet\n [OUT] ",
        "output": "active Antonym quiet",
        "data_id": 94
    },
    {
        "id": "task1510-c512e9aa1a3442f598abff154eb26ed6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brook is made of water\n [OUT] ",
        "output": "brook MadeOf water",
        "data_id": 95
    },
    {
        "id": "task1510-eabcc2c61f92475799f9e872fe718299",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bar is a kind of place\n [OUT] ",
        "output": "bar IsA place",
        "data_id": 96
    },
    {
        "id": "task1510-cef79cf2d627426c9fdde18de9ec8e1c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by sing\n [OUT] ",
        "output": "bird HasProperty sing",
        "data_id": 97
    },
    {
        "id": "task1510-908efea9eef4405daffffc8cfb1f9b0d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach is a kind of connect\n [OUT] ",
        "output": "attach IsA connect",
        "data_id": 98
    },
    {
        "id": "task1510-a83a8129209349bb9548712afe9be1d8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy is a kind of man\n [OUT] ",
        "output": "boy IsA man",
        "data_id": 99
    },
    {
        "id": "task1510-028157babab44d1398800fe25d27482b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bloom can be used with the same meaning of flower\n [OUT] ",
        "output": "bloom Synonym flower",
        "data_id": 100
    },
    {
        "id": "task1510-4e6a01ab0f924419822bc03fcd337aae",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] athlete can be characterized by energetic\n [OUT] ",
        "output": "athlete HasProperty energetic",
        "data_id": 101
    },
    {
        "id": "task1510-5f6c69e88c8141df8d15224fe156629f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used as the opposite of destroy\n [OUT] ",
        "output": "build Antonym destroy",
        "data_id": 102
    },
    {
        "id": "task1510-7142b59d7c8c4472942ef74c1988f178",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used with the same meaning of create\n [OUT] ",
        "output": "build Synonym create",
        "data_id": 103
    },
    {
        "id": "task1510-b16ee812dfc5429b81a33788c6ff5dc9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by interest\n [OUT] ",
        "output": "bird HasProperty interest",
        "data_id": 104
    },
    {
        "id": "task1510-92c5d33834784bdfa02ea59a65f35d6d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn can be used as the opposite of freeze\n [OUT] ",
        "output": "burn Antonym freeze",
        "data_id": 105
    },
    {
        "id": "task1510-a4334dc263ca43c9be52642fd90c9982",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be characterized by big\n [OUT] ",
        "output": "build HasProperty big",
        "data_id": 106
    },
    {
        "id": "task1510-484bbc48df2748f0abae62e1a063a1c6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be characterized by hard\n [OUT] ",
        "output": "bone HasProperty hard",
        "data_id": 107
    },
    {
        "id": "task1510-9b61eba83e3047cf9334f502fc766c03",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atmosphere is a kind of air\n [OUT] ",
        "output": "atmosphere IsA air",
        "data_id": 108
    },
    {
        "id": "task1510-c8749bfbb19c4ed7b0e8957f47d1600f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beef is part of cattle\n [OUT] ",
        "output": "beef PartOf cattle",
        "data_id": 109
    },
    {
        "id": "task1510-f881ac3130964c108773ae5e39d4e229",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bow can be used as the opposite of pluck\n [OUT] ",
        "output": "bow Antonym pluck",
        "data_id": 110
    },
    {
        "id": "task1510-3546324c331b4f549e1e03cb101b402f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] approach is a kind of come\n [OUT] ",
        "output": "approach IsA come",
        "data_id": 111
    },
    {
        "id": "task1510-924a8d21dc26426fb4d43a58d2ffbf1c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball is part of game\n [OUT] ",
        "output": "basketball PartOf game",
        "data_id": 112
    },
    {
        "id": "task1510-f76c6097b6f54a3e934243f058662ebd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Action can be used with the same meaning of plot\n [OUT] ",
        "output": "action Synonym plot",
        "data_id": 113
    },
    {
        "id": "task1510-72f1c4305eac49208b6e2a709d78a96c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball is a kind of toy\n [OUT] ",
        "output": "ball IsA toy",
        "data_id": 114
    },
    {
        "id": "task1510-873d6af2bb544808a451947fbc8fd1f7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is a kind of sport\n [OUT] ",
        "output": "bowl IsA sport",
        "data_id": 115
    },
    {
        "id": "task1510-b9b855d04d2c46b79b3e483735991ec7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] axe can be characterized by sharp\n [OUT] ",
        "output": "axe HasProperty sharp",
        "data_id": 116
    },
    {
        "id": "task1510-552cff794b154d7cb992ce56fac37755",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bend is a kind of turn\n [OUT] ",
        "output": "bend IsA turn",
        "data_id": 117
    },
    {
        "id": "task1510-50d92cfd936847e8b7c72f36ae7a0a70",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arithmetic is a kind of math\n [OUT] ",
        "output": "arithmetic IsA math",
        "data_id": 118
    },
    {
        "id": "task1510-25a316e290674176bd91dc8cc09049d7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anchor is made of iron\n [OUT] ",
        "output": "anchor MadeOf iron",
        "data_id": 119
    },
    {
        "id": "task1510-6535b910cbbe4f93ac8ff656d200c424",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can have or can contain floor\n [OUT] ",
        "output": "bedroom HasA floor",
        "data_id": 120
    },
    {
        "id": "task1510-7083b099675f40f387e91ac142bd339c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball can be characterized by hard\n [OUT] ",
        "output": "baseball HasProperty hard",
        "data_id": 121
    },
    {
        "id": "task1510-1ae0d405be4b428ca53854ed61a52140",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blanket can be characterized by soft\n [OUT] ",
        "output": "blanket HasProperty soft",
        "data_id": 122
    },
    {
        "id": "task1510-f1b01afbe6754605ace0d3d9c329ac77",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment is a kind of build\n [OUT] ",
        "output": "apartment IsA build",
        "data_id": 123
    },
    {
        "id": "task1510-7596816fb80a4ebcbd5a14d3cfe5e274",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bike is a kind of exercise\n [OUT] ",
        "output": "bike IsA exercise",
        "data_id": 124
    },
    {
        "id": "task1510-74945d9948444320b77eeb72a4553af3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by small\n [OUT] ",
        "output": "baby HasProperty small",
        "data_id": 125
    },
    {
        "id": "task1510-c34ce219bb6a4f1c866894d53048b4de",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is made of steel\n [OUT] ",
        "output": "bowl MadeOf steel",
        "data_id": 126
    },
    {
        "id": "task1510-a1961550586c46db8f9c4f125df00d3b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can be used as the opposite of head\n [OUT] ",
        "output": "body Antonym head",
        "data_id": 127
    },
    {
        "id": "task1510-19e232c870024763b1dea0602f245bfa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build is a kind of good\n [OUT] ",
        "output": "build IsA good",
        "data_id": 128
    },
    {
        "id": "task1510-224713a3b6864eff86b8ad9ee7bf9f06",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can have or can contain chair\n [OUT] ",
        "output": "bedroom HasA chair",
        "data_id": 129
    },
    {
        "id": "task1510-21e265dcf0c7417cb9ca44330b0fce07",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] branch can be used as the opposite of root\n [OUT] ",
        "output": "branch Antonym root",
        "data_id": 130
    },
    {
        "id": "task1510-ac9fce06cb1a47438cd1de34aaa72200",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can have or can contain something\n [OUT] ",
        "output": "box HasA something",
        "data_id": 131
    },
    {
        "id": "task1510-e66c5c095f6844d6a0f95085acd86786",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread can be used as the opposite of meat\n [OUT] ",
        "output": "bread Antonym meat",
        "data_id": 132
    },
    {
        "id": "task1510-45622d226e5b458eb24e67ab94f7c885",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bag is made of plastic\n [OUT] ",
        "output": "bag MadeOf plastic",
        "data_id": 133
    },
    {
        "id": "task1510-6cee96aa72aa456f9a1c87d7566443f6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bin is a kind of container\n [OUT] ",
        "output": "bin IsA container",
        "data_id": 134
    },
    {
        "id": "task1510-fb060c7c3f4042558c99ed30482dd3eb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss can be used with the same meaning of head\n [OUT] ",
        "output": "boss Synonym head",
        "data_id": 135
    },
    {
        "id": "task1510-76b640ac69bf446ea880008d575ed4b2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] answer is a kind of statement\n [OUT] ",
        "output": "answer IsA statement",
        "data_id": 136
    },
    {
        "id": "task1510-bdb5e6ca525a471492957a3f9207820d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure can be characterized by thrill\n [OUT] ",
        "output": "adventure HasProperty thrill",
        "data_id": 137
    },
    {
        "id": "task1510-8621ce623cfa422fb3fc09738637dd19",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad is a kind of result\n [OUT] ",
        "output": "bad IsA result",
        "data_id": 138
    },
    {
        "id": "task1510-cf819a0f61f24d7888dfa3a90be10c0c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle can have or can contain milk\n [OUT] ",
        "output": "bottle HasA milk",
        "data_id": 139
    },
    {
        "id": "task1510-fe5f82c5bb5148c6809f226e32928727",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breast is part of turkey\n [OUT] ",
        "output": "breast PartOf turkey",
        "data_id": 140
    },
    {
        "id": "task1510-8ef576826c0246af9a55f2a45efa8211",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring can be used as the opposite of empty\n [OUT] ",
        "output": "bring Antonym empty",
        "data_id": 141
    },
    {
        "id": "task1510-1b5b1185089247d1a324b466e990f496",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used with the same meaning of construct\n [OUT] ",
        "output": "build Synonym construct",
        "data_id": 142
    },
    {
        "id": "task1510-99b58cd5f9054071927f3ed7c7a78073",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be used as the opposite of man\n [OUT] ",
        "output": "baby Antonym man",
        "data_id": 143
    },
    {
        "id": "task1510-3ab32c5f9145464eb83c118abafd2904",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt is part of rifle\n [OUT] ",
        "output": "bolt PartOf rifle",
        "data_id": 144
    },
    {
        "id": "task1510-cc38ea4362284bbe8547c123893b5bba",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bank is a kind of work\n [OUT] ",
        "output": "bank IsA work",
        "data_id": 145
    },
    {
        "id": "task1510-b5f21bf7076b44e28811dd4ab4bb12b6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] battle is a kind of fight\n [OUT] ",
        "output": "battle IsA fight",
        "data_id": 146
    },
    {
        "id": "task1510-f180f78e84de48ae93ddcd2e156d246e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bank can have or can contain change\n [OUT] ",
        "output": "bank HasA change",
        "data_id": 147
    },
    {
        "id": "task1510-3c5023e06fcc4074867a31ce7572f259",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] automobile can have or can contain radio\n [OUT] ",
        "output": "automobile HasA radio",
        "data_id": 148
    },
    {
        "id": "task1510-f5907b3beb584d5b9240cd297c181350",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue can be used as the opposite of happy\n [OUT] ",
        "output": "blue Antonym happy",
        "data_id": 149
    },
    {
        "id": "task1510-dcfa2193820f437a86a1ee2c0cb16d48",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by heavy\n [OUT] ",
        "output": "book HasProperty heavy",
        "data_id": 150
    },
    {
        "id": "task1510-acb0ba23c91648f4b87a0e47234e409b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring can be used as the opposite of give\n [OUT] ",
        "output": "bring Antonym give",
        "data_id": 151
    },
    {
        "id": "task1510-65330a06819c4f3c91facda324e839d1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] battle can be used as the opposite of peace\n [OUT] ",
        "output": "battle Antonym peace",
        "data_id": 152
    },
    {
        "id": "task1510-00b7165978c842dc9f89420581471057",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bee is a kind of animal\n [OUT] ",
        "output": "bee IsA animal",
        "data_id": 153
    },
    {
        "id": "task1510-b72656e3a554437a90697d89a2ddc3b1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birthday can be used as the opposite of funeral\n [OUT] ",
        "output": "birthday Antonym funeral",
        "data_id": 154
    },
    {
        "id": "task1510-6196f8424ea741ee96afbd454ab556a2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beautiful can be used as the opposite of dull\n [OUT] ",
        "output": "beautiful Antonym dull",
        "data_id": 155
    },
    {
        "id": "task1510-8d7d2ea4aaf441748015928ac0af4ee6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment can be used with the same meaning of flat\n [OUT] ",
        "output": "apartment Synonym flat",
        "data_id": 156
    },
    {
        "id": "task1510-4f83d315846448d998ddac65e0690b31",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art can be characterized by abstract\n [OUT] ",
        "output": "art HasProperty abstract",
        "data_id": 157
    },
    {
        "id": "task1510-42bd9267cdb7485a9b3c66c61f543439",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat can be characterized by big\n [OUT] ",
        "output": "boat HasProperty big",
        "data_id": 158
    },
    {
        "id": "task1510-5ab4ef8dcce64e878bed18645ca20182",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone is part of skeleton\n [OUT] ",
        "output": "bone PartOf skeleton",
        "data_id": 159
    },
    {
        "id": "task1510-8834ba21716a4102bb06647c900ee4c9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle is made of metal\n [OUT] ",
        "output": "bicycle MadeOf metal",
        "data_id": 160
    },
    {
        "id": "task1510-a3598163830a4a2290397bb05edcd0b3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger can be used as the opposite of happy\n [OUT] ",
        "output": "anger Antonym happy",
        "data_id": 161
    },
    {
        "id": "task1510-58ccdfc236b5472cb8a3610bc363d79d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be used as the opposite of worm\n [OUT] ",
        "output": "bird Antonym worm",
        "data_id": 162
    },
    {
        "id": "task1510-8a310fe934d8497c99aabb04d71fd735",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] banjo is made of wood\n [OUT] ",
        "output": "banjo MadeOf wood",
        "data_id": 163
    },
    {
        "id": "task1510-861332e4e18c4504bf36a8c5d0afd0a0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bush can be characterized by alive\n [OUT] ",
        "output": "bush HasProperty alive",
        "data_id": 164
    },
    {
        "id": "task1510-1d9e8059ff4a48819edac6098a139945",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] board can be used with the same meaning of committee\n [OUT] ",
        "output": "board Synonym committee",
        "data_id": 165
    },
    {
        "id": "task1510-9874dadf83f446a7a58c9f82b8a90242",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance can be used as the opposite of bias\n [OUT] ",
        "output": "balance Antonym bias",
        "data_id": 166
    },
    {
        "id": "task1510-31ce717f6ac14b9585320e16d121d961",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is a kind of dish\n [OUT] ",
        "output": "bowl IsA dish",
        "data_id": 167
    },
    {
        "id": "task1510-9d071956d85d4d63959e9d8879e6f10f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bar is part of goal\n [OUT] ",
        "output": "bar PartOf goal",
        "data_id": 168
    },
    {
        "id": "task1510-ab5139a51018499ea8f8a529f940bd45",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] agreement is a kind of statement\n [OUT] ",
        "output": "agreement IsA statement",
        "data_id": 169
    },
    {
        "id": "task1510-151c9b4614ef4a2aa222460f4b685af7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is part of nose\n [OUT] ",
        "output": "bridge PartOf nose",
        "data_id": 170
    },
    {
        "id": "task1510-444772a8bae54b9f8cb121da360e1a9b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beautiful can be used as the opposite of bad\n [OUT] ",
        "output": "beautiful Antonym bad",
        "data_id": 171
    },
    {
        "id": "task1510-ca6ec2af37e0485ca66e01adb60b14d5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can have or can contain ceiling\n [OUT] ",
        "output": "bathroom HasA ceiling",
        "data_id": 172
    },
    {
        "id": "task1510-529d7a5912fc4cb68705ded69deffa23",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] army can be used as the opposite of navy\n [OUT] ",
        "output": "army Antonym navy",
        "data_id": 173
    },
    {
        "id": "task1510-cb032f18df394853a8cb4d70d4aad1b2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black is a kind of person\n [OUT] ",
        "output": "black IsA person",
        "data_id": 174
    },
    {
        "id": "task1510-8054f4d9cf234d7bb5d89af7ffef0f16",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is a kind of knowledge\n [OUT] ",
        "output": "book IsA knowledge",
        "data_id": 175
    },
    {
        "id": "task1510-a7e9338f90154115bc106c7aa3e27763",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used as the opposite of create\n [OUT] ",
        "output": "blow Antonym create",
        "data_id": 176
    },
    {
        "id": "task1510-fd1d2232114549b89c83f5ed26c8457f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alley can be characterized by dark\n [OUT] ",
        "output": "alley HasProperty dark",
        "data_id": 177
    },
    {
        "id": "task1510-b4e2a7d5527545e1b775abf9f51a042d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bite can be used with the same meaning of piece\n [OUT] ",
        "output": "bite Synonym piece",
        "data_id": 178
    },
    {
        "id": "task1510-eaebdeef80724b49b129cd11b6662580",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] button is part of mouse\n [OUT] ",
        "output": "button PartOf mouse",
        "data_id": 179
    },
    {
        "id": "task1510-0e3e730540674ab389c0f18a055cde2c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back is a kind of confirm\n [OUT] ",
        "output": "back IsA confirm",
        "data_id": 180
    },
    {
        "id": "task1510-08a32c50d9574caea4493651e7b3232a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] author is part of book\n [OUT] ",
        "output": "author PartOf book",
        "data_id": 181
    },
    {
        "id": "task1510-72cfb645b77c4a5b98556a6e87dabaeb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aluminium can be used with the same meaning of aluminum\n [OUT] ",
        "output": "aluminium Synonym aluminum",
        "data_id": 182
    },
    {
        "id": "task1510-c18da33c8c784dbcbe3964182dc7660f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] agreement can be characterized by good\n [OUT] ",
        "output": "agreement HasProperty good",
        "data_id": 183
    },
    {
        "id": "task1510-5e3f821b9c0b485db95f64a88aaf61d2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by ugly\n [OUT] ",
        "output": "baby HasProperty ugly",
        "data_id": 184
    },
    {
        "id": "task1510-5658a8b143af4b10af07a6ef073ce186",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beak is a kind of mouth\n [OUT] ",
        "output": "beak IsA mouth",
        "data_id": 185
    },
    {
        "id": "task1510-6ee280f92d754bce952b170c45c17ef2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butter can be characterized by yellow\n [OUT] ",
        "output": "butter HasProperty yellow",
        "data_id": 186
    },
    {
        "id": "task1510-63beff45f4274f6cb84100413559436b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boyfriend can be used as the opposite of girlfriend\n [OUT] ",
        "output": "boyfriend Antonym girlfriend",
        "data_id": 187
    },
    {
        "id": "task1510-ec4843507af84b3189ab1c3eaad5d88a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used with the same meaning of fail\n [OUT] ",
        "output": "break Synonym fail",
        "data_id": 188
    },
    {
        "id": "task1510-69360853e766451db7f6243a3a065aaa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball is made of plastic\n [OUT] ",
        "output": "ball MadeOf plastic",
        "data_id": 189
    },
    {
        "id": "task1510-ddc0b54530d54040a81f3573b1efa213",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain pain\n [OUT] ",
        "output": "animal HasA pain",
        "data_id": 190
    },
    {
        "id": "task1510-869dca17b4304e16a8fb6d7c2e80868c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of performance\n [OUT] ",
        "output": "action Synonym performance",
        "data_id": 191
    },
    {
        "id": "task1510-dccded66143043ec8eba94e882f8079d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad can be used as the opposite of good\n [OUT] ",
        "output": "bad Antonym good",
        "data_id": 192
    },
    {
        "id": "task1510-0d785bfb5703400f9fd387bb6198df4b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be characterized by flat\n [OUT] ",
        "output": "bed HasProperty flat",
        "data_id": 193
    },
    {
        "id": "task1510-53e0d715e5c645f7a7edaa3ec6719bd5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beak is a kind of body_part\n [OUT] ",
        "output": "beak IsA body_part",
        "data_id": 194
    },
    {
        "id": "task1510-af95d4c98a344218859e2b6d5dfb6ab3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can have or can contain feather\n [OUT] ",
        "output": "bird HasA feather",
        "data_id": 195
    },
    {
        "id": "task1510-a31844fa53a24660b2c56826d2fabdc6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat can have or can contain sail\n [OUT] ",
        "output": "boat HasA sail",
        "data_id": 196
    },
    {
        "id": "task1510-fe6c2ae6c907475b839de3994a641c6b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] address is part of letter\n [OUT] ",
        "output": "address PartOf letter",
        "data_id": 197
    },
    {
        "id": "task1510-e9646136c02a425f8517b7f107f796e9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by green\n [OUT] ",
        "output": "apple HasProperty green",
        "data_id": 198
    },
    {
        "id": "task1510-a30cbfc2dd3d4db88468435999bc00cb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon can have or can contain gas\n [OUT] ",
        "output": "balloon HasA gas",
        "data_id": 199
    },
    {
        "id": "task1510-7d39b759a4974b6e8db0ea7a95077802",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of construct\n [OUT] ",
        "output": "break Antonym construct",
        "data_id": 200
    },
    {
        "id": "task1510-a1dc8438a91d4342a4fd4e04c6fffff3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain emotion\n [OUT] ",
        "output": "animal HasA emotion",
        "data_id": 201
    },
    {
        "id": "task1510-a23e3f0008fe4329b8d5254404f120d6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america is a kind of place\n [OUT] ",
        "output": "america IsA place",
        "data_id": 202
    },
    {
        "id": "task1510-3df51b1f1c5149cd8c1fed697af8e702",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball can have or can contain stitch\n [OUT] ",
        "output": "baseball HasA stitch",
        "data_id": 203
    },
    {
        "id": "task1510-98cde13ec23149dea21bb9fcd098c466",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn can be used as the opposite of water\n [OUT] ",
        "output": "burn Antonym water",
        "data_id": 204
    },
    {
        "id": "task1510-f4206db364c4497881bb947d2a3b7826",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america is part of world\n [OUT] ",
        "output": "america PartOf world",
        "data_id": 205
    },
    {
        "id": "task1510-509386454d4b454092500d64d8936f54",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] busy can be used as the opposite of slow\n [OUT] ",
        "output": "busy Antonym slow",
        "data_id": 206
    },
    {
        "id": "task1510-68eee9a8059d4e0186779535fb558820",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affection can be used as the opposite of dislike\n [OUT] ",
        "output": "affection Antonym dislike",
        "data_id": 207
    },
    {
        "id": "task1510-8a956a4d4aa44e11942eab2da2b6eef4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is made of paper\n [OUT] ",
        "output": "book MadeOf paper",
        "data_id": 208
    },
    {
        "id": "task1510-9cd565aab6b74f66bb3f541a4fe2a0bd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] australia is a kind of island\n [OUT] ",
        "output": "australia IsA island",
        "data_id": 209
    },
    {
        "id": "task1510-6508045a715748e3b08daaeb0f53a573",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] buy can be used as the opposite of steal\n [OUT] ",
        "output": "buy Antonym steal",
        "data_id": 210
    },
    {
        "id": "task1510-9bf5a202517e4fcab753ac8854ba01b2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beef is a kind of food\n [OUT] ",
        "output": "beef IsA food",
        "data_id": 211
    },
    {
        "id": "task1510-303ec81b79d4466d81fe208efe22112b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is a kind of text\n [OUT] ",
        "output": "book IsA text",
        "data_id": 212
    },
    {
        "id": "task1510-4d3fdb2eb5764aa9812db7fe884f084f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] approach is true then also advance is true\n [OUT] ",
        "output": "approach Entails advance",
        "data_id": 213
    },
    {
        "id": "task1510-514aeef0b57e4ff0a7720d16dd554100",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birth is a kind of begin\n [OUT] ",
        "output": "birth IsA begin",
        "data_id": 214
    },
    {
        "id": "task1510-392c8274c5d5427a901474716c0f73f8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle can have or can contain wine\n [OUT] ",
        "output": "bottle HasA wine",
        "data_id": 215
    },
    {
        "id": "task1510-30cf1f259be14f49a99f43040e8efbdd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bend is part of road\n [OUT] ",
        "output": "bend PartOf road",
        "data_id": 216
    },
    {
        "id": "task1510-08cf8a541bdc4ac49596a0a7e23a4fb2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed is part of bedroom\n [OUT] ",
        "output": "bed PartOf bedroom",
        "data_id": 217
    },
    {
        "id": "task1510-a71af81f8ae340de89aa99429913fda2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy can be characterized by child\n [OUT] ",
        "output": "boy HasProperty child",
        "data_id": 218
    },
    {
        "id": "task1510-34a31ebfdc3f492d93cdedc443b0d463",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beauty can be characterized by rare\n [OUT] ",
        "output": "beauty HasProperty rare",
        "data_id": 219
    },
    {
        "id": "task1510-7e8eb651d90541e0b4fb545994874d8f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alarm can be characterized by loud\n [OUT] ",
        "output": "alarm HasProperty loud",
        "data_id": 220
    },
    {
        "id": "task1510-d78a437f24fd413e9f4e05b90f5af3c6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beak is part of bird\n [OUT] ",
        "output": "beak PartOf bird",
        "data_id": 221
    },
    {
        "id": "task1510-e8f6bfe27e6d491799805b2bd68e9cc1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america is a kind of continent\n [OUT] ",
        "output": "america IsA continent",
        "data_id": 222
    },
    {
        "id": "task1510-238c9064113246be97ffb5df3eb54bd3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of prosecution\n [OUT] ",
        "output": "action Synonym prosecution",
        "data_id": 223
    },
    {
        "id": "task1510-8f1c52c0863d415d90aa5ced00f1519e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is a kind of build\n [OUT] ",
        "output": "bridge IsA build",
        "data_id": 224
    },
    {
        "id": "task1510-f6a8bcc804b443288943da31d9ada123",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] album is made of vinyl\n [OUT] ",
        "output": "album MadeOf vinyl",
        "data_id": 225
    },
    {
        "id": "task1510-ce23c31cc17e4445b0cf61fed06562cd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by fly\n [OUT] ",
        "output": "bird HasProperty fly",
        "data_id": 226
    },
    {
        "id": "task1510-5be0c59cb4f84bd6a57142d8551b7ea7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] advance can be used as the opposite of fall\n [OUT] ",
        "output": "advance Antonym fall",
        "data_id": 227
    },
    {
        "id": "task1510-ffad992248654e15b2b4eb6a2d394bb7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brave can be used as the opposite of hide\n [OUT] ",
        "output": "brave Antonym hide",
        "data_id": 228
    },
    {
        "id": "task1510-efb727b42b71403a8f1ace2450551380",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle can be characterized by red\n [OUT] ",
        "output": "bicycle HasProperty red",
        "data_id": 229
    },
    {
        "id": "task1510-d7cb13d84d9b45ea9c6de15d09fbacd4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] account can be used with the same meaning of record\n [OUT] ",
        "output": "account Synonym record",
        "data_id": 230
    },
    {
        "id": "task1510-02243e37d1254f1386f6d7795a685ce7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring is true then also come is true\n [OUT] ",
        "output": "bring Entails come",
        "data_id": 231
    },
    {
        "id": "task1510-8f21a62004d7455c8d8836ced7e6b572",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bite is a kind of meal\n [OUT] ",
        "output": "bite IsA meal",
        "data_id": 232
    },
    {
        "id": "task1510-7d4bac5837e64a97b9d2c9405cb23535",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bat can have or can contain wing\n [OUT] ",
        "output": "bat HasA wing",
        "data_id": 233
    },
    {
        "id": "task1510-2f5672944cf34202992ead8a8bcfe7e9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bomb is made of metal\n [OUT] ",
        "output": "bomb MadeOf metal",
        "data_id": 234
    },
    {
        "id": "task1510-fee96fc3081d47de89998b59c55e831d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment can be characterized by black\n [OUT] ",
        "output": "apartment HasProperty black",
        "data_id": 235
    },
    {
        "id": "task1510-e44b20d1027e403c8fdd2bb9e1c67890",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used with the same meaning of account\n [OUT] ",
        "output": "book Synonym account",
        "data_id": 236
    },
    {
        "id": "task1510-862de0f789b74ed88e0095bf91abf425",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birth is a kind of change\n [OUT] ",
        "output": "birth IsA change",
        "data_id": 237
    },
    {
        "id": "task1510-16852c4365884021a0605ca8e75c154b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle can be characterized by fun\n [OUT] ",
        "output": "bicycle HasProperty fun",
        "data_id": 238
    },
    {
        "id": "task1510-d69580be07ae41a99209a9a27506eae3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act is a kind of performance\n [OUT] ",
        "output": "act IsA performance",
        "data_id": 239
    },
    {
        "id": "task1510-fbd58ff5634b4fbba2f595b52e024263",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by entertain\n [OUT] ",
        "output": "book HasProperty entertain",
        "data_id": 240
    },
    {
        "id": "task1510-d517b971a638468b9732ca1642773b48",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is made of stone\n [OUT] ",
        "output": "bridge MadeOf stone",
        "data_id": 241
    },
    {
        "id": "task1510-16e8001dffed4528b66bc4195a3890e8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed_sheet is made of cloth\n [OUT] ",
        "output": "bed_sheet MadeOf cloth",
        "data_id": 242
    },
    {
        "id": "task1510-fe1758a4c40f4a258d16aa72c62f5b30",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle can be used with the same meaning of bike\n [OUT] ",
        "output": "bicycle Synonym bike",
        "data_id": 243
    },
    {
        "id": "task1510-d57d79f1b62b490daf587d753ac7888b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aluminum is a kind of material\n [OUT] ",
        "output": "aluminum IsA material",
        "data_id": 244
    },
    {
        "id": "task1510-d920571b6a21497abcc9125c6e2bf5d7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] antique can be characterized by value\n [OUT] ",
        "output": "antique HasProperty value",
        "data_id": 245
    },
    {
        "id": "task1510-567e543befa74fd8aa04be7247ae2b96",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] accident is a kind of mistake\n [OUT] ",
        "output": "accident IsA mistake",
        "data_id": 246
    },
    {
        "id": "task1510-bb35d0988d244992a73b0849ac8859b0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bat is a kind of stuff\n [OUT] ",
        "output": "bat IsA stuff",
        "data_id": 247
    },
    {
        "id": "task1510-cd37b6f0a5e8434baeef13012810b607",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be characterized by excite\n [OUT] ",
        "output": "action HasProperty excite",
        "data_id": 248
    },
    {
        "id": "task1510-c984a809d2754566b71118fb2d4a9629",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by red\n [OUT] ",
        "output": "apple HasProperty red",
        "data_id": 249
    },
    {
        "id": "task1510-3822793477334c148622cd2aaafec33a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] advance is a kind of increase\n [OUT] ",
        "output": "advance IsA increase",
        "data_id": 250
    },
    {
        "id": "task1510-b9bb276ed7834f34a3600bf018d666b9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] base can be characterized by black\n [OUT] ",
        "output": "base HasProperty black",
        "data_id": 251
    },
    {
        "id": "task1510-4666bb4f059c43f4bca5968194411578",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] australia is a kind of continent\n [OUT] ",
        "output": "australia IsA continent",
        "data_id": 252
    },
    {
        "id": "task1510-a4575af7a4ec43878f1162f2cbf5fae5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can have or can contain hair\n [OUT] ",
        "output": "baby HasA hair",
        "data_id": 253
    },
    {
        "id": "task1510-bd832edd36214cfc8c3a93aa516a39c1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] antique can be used as the opposite of new\n [OUT] ",
        "output": "antique Antonym new",
        "data_id": 254
    },
    {
        "id": "task1510-ff062ea24c2144b7b79095e0eef9cf81",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blood can have or can contain water\n [OUT] ",
        "output": "blood HasA water",
        "data_id": 255
    },
    {
        "id": "task1510-9e1e74d05c9d4eada2c5943b7b8c7181",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art is a kind of hobby\n [OUT] ",
        "output": "art IsA hobby",
        "data_id": 256
    },
    {
        "id": "task1510-626fefe4274a40f39199d70eb9e9f456",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be used as the opposite of light\n [OUT] ",
        "output": "black Antonym light",
        "data_id": 257
    },
    {
        "id": "task1510-1740eb775d4a4f5692daddaa200e920e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bow is part of ship\n [OUT] ",
        "output": "bow PartOf ship",
        "data_id": 258
    },
    {
        "id": "task1510-85c9813e75554c4c8236229535618b35",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arch is a kind of bend\n [OUT] ",
        "output": "arch IsA bend",
        "data_id": 259
    },
    {
        "id": "task1510-fab2f62cb8124d3dba8571667a8812c4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle can be used as the opposite of can\n [OUT] ",
        "output": "bottle Antonym can",
        "data_id": 260
    },
    {
        "id": "task1510-9cb14ea0a9b94b6eb1307d8947e9ab36",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue can be used as the opposite of orange\n [OUT] ",
        "output": "blue Antonym orange",
        "data_id": 261
    },
    {
        "id": "task1510-dee75b6c31d7499ca4d4851d5298e16a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bounce can be used with the same meaning of up\n [OUT] ",
        "output": "bounce Synonym up",
        "data_id": 262
    },
    {
        "id": "task1510-fb51fba5add6450aab228efffaa122b9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bear can be used with the same meaning of birth\n [OUT] ",
        "output": "bear Synonym birth",
        "data_id": 263
    },
    {
        "id": "task1510-94ab1fbed267438fb22e7227506b9295",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baggage can be used with the same meaning of gear\n [OUT] ",
        "output": "baggage Synonym gear",
        "data_id": 264
    },
    {
        "id": "task1510-6ea3abed0df444f3a8bd6ee71b45357c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box is a kind of seat\n [OUT] ",
        "output": "box IsA seat",
        "data_id": 265
    },
    {
        "id": "task1510-b5058f4e16a34f7cafa928438654f173",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arch is part of bridge\n [OUT] ",
        "output": "arch PartOf bridge",
        "data_id": 266
    },
    {
        "id": "task1510-ac9c16395e4e485e952655791e47b70e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birth is part of life\n [OUT] ",
        "output": "birth PartOf life",
        "data_id": 267
    },
    {
        "id": "task1510-f723600d1c75498ab2d2f0bc7b84cb75",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn can be used as the opposite of cold\n [OUT] ",
        "output": "burn Antonym cold",
        "data_id": 268
    },
    {
        "id": "task1510-87c6acd809b04a34beced3e3e26a56ea",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bike can be characterized by stationary\n [OUT] ",
        "output": "bike HasProperty stationary",
        "data_id": 269
    },
    {
        "id": "task1510-d2a851c06b2748b8bbc9d6f0d0f6c18a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Ascend can be used as the opposite of descend\n [OUT] ",
        "output": "ascend Antonym descend",
        "data_id": 270
    },
    {
        "id": "task1510-866d48f835ce47558af94ba357502393",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] appear can be used as the opposite of leave\n [OUT] ",
        "output": "appear Antonym leave",
        "data_id": 271
    },
    {
        "id": "task1510-aedb785fbceb4cf9bd22b31d44dc566d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Act is a kind of art\n [OUT] ",
        "output": "act IsA art",
        "data_id": 272
    },
    {
        "id": "task1510-df59ffa9ee554f0fa6ef57f46a1c39b0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basement is part of house\n [OUT] ",
        "output": "basement PartOf house",
        "data_id": 273
    },
    {
        "id": "task1510-ac7c58e501ba407fbccc3a1363b7648e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Arise can be used as the opposite of get_down\n [OUT] ",
        "output": "arise Antonym get_down",
        "data_id": 274
    },
    {
        "id": "task1510-5512261e0d0a4a8e9ea9809cfb283ae2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] age can be used with the same meaning of historic_period\n [OUT] ",
        "output": "age Synonym historic_period",
        "data_id": 275
    },
    {
        "id": "task1510-dad0f0fa10014799bef76b1b95cf1239",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer can have or can contain alcohol\n [OUT] ",
        "output": "beer HasA alcohol",
        "data_id": 276
    },
    {
        "id": "task1510-59c9a2af54ee47258a2d2ee72f458e4c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain bone\n [OUT] ",
        "output": "animal HasA bone",
        "data_id": 277
    },
    {
        "id": "task1510-9996b62089ce4c95870a0eaddbcb1e5a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atom can have or can contain electron\n [OUT] ",
        "output": "atom HasA electron",
        "data_id": 278
    },
    {
        "id": "task1510-7c9be861fbe64690b536b4ef5dfc6adf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beat can be used with the same meaning of hammer\n [OUT] ",
        "output": "beat Synonym hammer",
        "data_id": 279
    },
    {
        "id": "task1510-d9c2590c6a854c9795c44983344760bf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be used as the opposite of adult\n [OUT] ",
        "output": "baby Antonym adult",
        "data_id": 280
    },
    {
        "id": "task1510-624731dc0c034106a325d4b893aae1a8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue can be used as the opposite of white\n [OUT] ",
        "output": "blue Antonym white",
        "data_id": 281
    },
    {
        "id": "task1510-dc7b1abcfe094036bec2f5d3018e8b5e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by entertain\n [OUT] ",
        "output": "baby HasProperty entertain",
        "data_id": 282
    },
    {
        "id": "task1510-fc773d9a150d4e188d9aaeac13fbf05a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can have or can contain toilet\n [OUT] ",
        "output": "bathroom HasA toilet",
        "data_id": 283
    },
    {
        "id": "task1510-617fc6600f414f74920f9acc0c364305",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] armor can be used with the same meaning of plate\n [OUT] ",
        "output": "armor Synonym plate",
        "data_id": 284
    },
    {
        "id": "task1510-2f59679f1c87449bbb5f778e47ff3f11",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy is a kind of animal\n [OUT] ",
        "output": "boy IsA animal",
        "data_id": 285
    },
    {
        "id": "task1510-a58869ccd774402a83350e7d6e3eb284",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] assemble can be used as the opposite of break\n [OUT] ",
        "output": "assemble Antonym break",
        "data_id": 286
    },
    {
        "id": "task1510-3aaa4020879346e2960330848e5ba403",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom is a kind of place\n [OUT] ",
        "output": "bathroom IsA place",
        "data_id": 287
    },
    {
        "id": "task1510-825c903098d4479fa69c192b2dce4835",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breast is part of human\n [OUT] ",
        "output": "breast PartOf human",
        "data_id": 288
    },
    {
        "id": "task1510-dad84bcfe86646a281150058b70c2306",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain page\n [OUT] ",
        "output": "book HasA page",
        "data_id": 289
    },
    {
        "id": "task1510-da03f9ab56844b7c80d5213636400398",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bell can be characterized by loud\n [OUT] ",
        "output": "bell HasProperty loud",
        "data_id": 290
    },
    {
        "id": "task1510-1f9ec990a7274b208827c83fcb8dcf7a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal is a kind of organism\n [OUT] ",
        "output": "animal IsA organism",
        "data_id": 291
    },
    {
        "id": "task1510-b2a55b6d8b7749f396174c2076d269df",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bend can be used with the same meaning of curve\n [OUT] ",
        "output": "bend Synonym curve",
        "data_id": 292
    },
    {
        "id": "task1510-67b73a1258df49a3ad2293975f902c63",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birthday can be characterized by fun\n [OUT] ",
        "output": "birthday HasProperty fun",
        "data_id": 293
    },
    {
        "id": "task1510-7b985a205972437893a70b3591d96212",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball is a kind of sport\n [OUT] ",
        "output": "baseball IsA sport",
        "data_id": 294
    },
    {
        "id": "task1510-1ea3d3878c994ce3ad0bd5433351bd3e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy can be used as the opposite of girl\n [OUT] ",
        "output": "boy Antonym girl",
        "data_id": 295
    },
    {
        "id": "task1510-c019f4b1fbf14b59a3a9f8b289c177a3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act can be used as the opposite of real\n [OUT] ",
        "output": "act Antonym real",
        "data_id": 296
    },
    {
        "id": "task1510-1187d853f58e459daaab435d1aa33f85",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment is a kind of home\n [OUT] ",
        "output": "apartment IsA home",
        "data_id": 297
    },
    {
        "id": "task1510-9a964920d29a48259d92bf7ebe2bec37",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basement can be used as the opposite of attic\n [OUT] ",
        "output": "basement Antonym attic",
        "data_id": 298
    },
    {
        "id": "task1510-d0b3d09c563649cdb8ae8a549940ce5f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer is a kind of alcohol\n [OUT] ",
        "output": "beer IsA alcohol",
        "data_id": 299
    },
    {
        "id": "task1510-9adc19d01f9a40aa87c2ad0cf5fdbb6a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action is a kind of event\n [OUT] ",
        "output": "action IsA event",
        "data_id": 300
    },
    {
        "id": "task1510-d7b5e46360e24154ae90e07ebb6523b4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] big can be used as the opposite of small\n [OUT] ",
        "output": "big Antonym small",
        "data_id": 301
    },
    {
        "id": "task1510-e3c3229511154744bc2c741b214ae289",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark can be used as the opposite of bite\n [OUT] ",
        "output": "bark Antonym bite",
        "data_id": 302
    },
    {
        "id": "task1510-c1cd86c8b25a4766b88c7a678169d665",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] asia is a kind of place\n [OUT] ",
        "output": "asia IsA place",
        "data_id": 303
    },
    {
        "id": "task1510-059518ddf6c2435294da8a829651e599",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bath can be characterized by relax\n [OUT] ",
        "output": "bath HasProperty relax",
        "data_id": 304
    },
    {
        "id": "task1510-197cc8618cf24d0a96d7aa3b1e66aa8e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Book is a kind of magazine\n [OUT] ",
        "output": "book IsA magazine",
        "data_id": 305
    },
    {
        "id": "task1510-f53808dfdd5e48f48b4e4b9a742e91ed",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball is a kind of event\n [OUT] ",
        "output": "ball IsA event",
        "data_id": 306
    },
    {
        "id": "task1510-e630bd4f9faf4b6ca52b5d6e758766d4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt can be used as the opposite of slow\n [OUT] ",
        "output": "bolt Antonym slow",
        "data_id": 307
    },
    {
        "id": "task1510-d300cf9d89da42dcbf19b5df002aad26",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bar is part of court\n [OUT] ",
        "output": "bar PartOf court",
        "data_id": 308
    },
    {
        "id": "task1510-442ae429a3204e498b58c6c60bbbf029",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affection can be characterized by healthy\n [OUT] ",
        "output": "affection HasProperty healthy",
        "data_id": 309
    },
    {
        "id": "task1510-fa0ab5f710694bd8b70ec122f364b77a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin can be used as the opposite of middle\n [OUT] ",
        "output": "begin Antonym middle",
        "data_id": 310
    },
    {
        "id": "task1510-02dd09e49caf4c5dad72513897344cbb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle can have or can contain wheel\n [OUT] ",
        "output": "bicycle HasA wheel",
        "data_id": 311
    },
    {
        "id": "task1510-bb47c2614caa49c281971c1bb23018d3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bell is made of metal\n [OUT] ",
        "output": "bell MadeOf metal",
        "data_id": 312
    },
    {
        "id": "task1510-7dae09dd6e9e4288aaec6727efc78494",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body is part of human\n [OUT] ",
        "output": "body PartOf human",
        "data_id": 313
    },
    {
        "id": "task1510-c4014372f084463d979876034ffde5dc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] actor is part of film\n [OUT] ",
        "output": "actor PartOf film",
        "data_id": 314
    },
    {
        "id": "task1510-c650991c06f542bebdeef239b39b72e3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of fix\n [OUT] ",
        "output": "break Antonym fix",
        "data_id": 315
    },
    {
        "id": "task1510-89296a38b6934ea8be077b1d4d814382",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birthday is a kind of fun\n [OUT] ",
        "output": "birthday IsA fun",
        "data_id": 316
    },
    {
        "id": "task1510-d6d92ffd7fa548ea96f42fe98e14b079",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brain is part of head\n [OUT] ",
        "output": "brain PartOf head",
        "data_id": 317
    },
    {
        "id": "task1510-d0114d0420f7468fac2e2ab5f03fac0d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america can be characterized by huge\n [OUT] ",
        "output": "america HasProperty huge",
        "data_id": 318
    },
    {
        "id": "task1510-f35af499f4b047fd89266a4f10c51f2a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon is made of rubber\n [OUT] ",
        "output": "balloon MadeOf rubber",
        "data_id": 319
    },
    {
        "id": "task1510-9caf17997818461b8f7634af6edde43e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom is part of dwell\n [OUT] ",
        "output": "bathroom PartOf dwell",
        "data_id": 320
    },
    {
        "id": "task1510-fe544f0111ac48dca05b35c804a2dc08",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bug can be used with the same meaning of insect\n [OUT] ",
        "output": "bug Synonym insect",
        "data_id": 321
    },
    {
        "id": "task1510-5ac5f7f25dc74b128202295c2367912e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl can be used as the opposite of plate\n [OUT] ",
        "output": "bowl Antonym plate",
        "data_id": 322
    },
    {
        "id": "task1510-92f5a64e221a46d6b02bdb9a6c0204a1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america can be characterized by violent\n [OUT] ",
        "output": "america HasProperty violent",
        "data_id": 323
    },
    {
        "id": "task1510-c091d9c757f64fb081f5f09045148880",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birth can be used as the opposite of death\n [OUT] ",
        "output": "birth Antonym death",
        "data_id": 324
    },
    {
        "id": "task1510-66eef5ee2903401e8827732584d660f9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by fun\n [OUT] ",
        "output": "baby HasProperty fun",
        "data_id": 325
    },
    {
        "id": "task1510-4f98f41c8ff44b0085a0b05f4e830058",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body is made of cell\n [OUT] ",
        "output": "body MadeOf cell",
        "data_id": 326
    },
    {
        "id": "task1510-40941d15f2e84bd399b897cba8a8eb31",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom is part of house\n [OUT] ",
        "output": "bathroom PartOf house",
        "data_id": 327
    },
    {
        "id": "task1510-ab5dadf0561747eba98936bdfd7b001d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brave is a kind of person\n [OUT] ",
        "output": "brave IsA person",
        "data_id": 328
    },
    {
        "id": "task1510-72e1305b45f742b9b5e41ccc2c716d38",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by smile\n [OUT] ",
        "output": "baby HasProperty smile",
        "data_id": 329
    },
    {
        "id": "task1510-9dccbf90f31c44e9aacc8cf2bc306daf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Alcoholic is a kind of human\n [OUT] ",
        "output": "alcoholic IsA human",
        "data_id": 330
    },
    {
        "id": "task1510-98436fb38afe40b9b08c2fa40fb4f8f3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alley is a kind of street\n [OUT] ",
        "output": "alley IsA street",
        "data_id": 331
    },
    {
        "id": "task1510-d507adf79c0a4be39f31d816c3bf424b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is a kind of game\n [OUT] ",
        "output": "bowl IsA game",
        "data_id": 332
    },
    {
        "id": "task1510-8bc157c566f84059bd44a844af81014b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bar is a kind of business\n [OUT] ",
        "output": "bar IsA business",
        "data_id": 333
    },
    {
        "id": "task1510-8349bcea03974c5b9ef9b5615b94dabd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is made of wood\n [OUT] ",
        "output": "bridge MadeOf wood",
        "data_id": 334
    },
    {
        "id": "task1510-9d038e6a8273483ea21225fc9e5d33c4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] buy can be used as the opposite of save\n [OUT] ",
        "output": "buy Antonym save",
        "data_id": 335
    },
    {
        "id": "task1510-781b2f2c3f7f4658b5c0f02c93df9a9d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] base is part of box\n [OUT] ",
        "output": "base PartOf box",
        "data_id": 336
    },
    {
        "id": "task1510-2a7ebf9586ce435caf2203a516f7fbe6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bin is made of plastic\n [OUT] ",
        "output": "bin MadeOf plastic",
        "data_id": 337
    },
    {
        "id": "task1510-14f4c25fb1564bf8b316f61b46ae6531",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art can be used as the opposite of science\n [OUT] ",
        "output": "art Antonym science",
        "data_id": 338
    },
    {
        "id": "task1510-a2128fffa2774a7aa7fc674e88986263",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] automobile is made of steel\n [OUT] ",
        "output": "automobile MadeOf steel",
        "data_id": 339
    },
    {
        "id": "task1510-9134fed7c3d74b209ee130244e573ad9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark is part of tree\n [OUT] ",
        "output": "bark PartOf tree",
        "data_id": 340
    },
    {
        "id": "task1510-c34c6a1351ca4e7b83aaa51af92d2858",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be characterized by friendly\n [OUT] ",
        "output": "animal HasProperty friendly",
        "data_id": 341
    },
    {
        "id": "task1510-15f75fef5375490f9e88299f9b57f05e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] author can be used with the same meaning of artist\n [OUT] ",
        "output": "author Synonym artist",
        "data_id": 342
    },
    {
        "id": "task1510-0f18e0078aaf4603b835a0a2721cf003",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atmosphere can be used with the same meaning of mood\n [OUT] ",
        "output": "atmosphere Synonym mood",
        "data_id": 343
    },
    {
        "id": "task1510-641d1c20bf8e45a8a9eaea1788a01b6d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be used as the opposite of bright\n [OUT] ",
        "output": "black Antonym bright",
        "data_id": 344
    },
    {
        "id": "task1510-93196ba451f94ad7ab45fac323fd1e11",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bit is part of key\n [OUT] ",
        "output": "bit PartOf key",
        "data_id": 345
    },
    {
        "id": "task1510-4a4492fc98404776ba3fe4d513f9eae5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad is a kind of evil\n [OUT] ",
        "output": "bad IsA evil",
        "data_id": 346
    },
    {
        "id": "task1510-00e24063fa5e4bc0bd4f253a8243166e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure can be used as the opposite of home\n [OUT] ",
        "output": "adventure Antonym home",
        "data_id": 347
    },
    {
        "id": "task1510-46a4e988ec304b5caa008256547b7f0b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow is part of fight\n [OUT] ",
        "output": "blow PartOf fight",
        "data_id": 348
    },
    {
        "id": "task1510-b8467121f47f4e258163d66251877f7f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can have or can contain food\n [OUT] ",
        "output": "box HasA food",
        "data_id": 349
    },
    {
        "id": "task1510-721d20d3847047fd9bef9986120ff8ba",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be characterized by large\n [OUT] ",
        "output": "build HasProperty large",
        "data_id": 350
    },
    {
        "id": "task1510-7c39429c94dd4449ae4666ffb1af2390",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue can be used as the opposite of green\n [OUT] ",
        "output": "blue Antonym green",
        "data_id": 351
    },
    {
        "id": "task1510-fa0a14260dc14e1aa2df42fec3f49f9e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt can be characterized by tight\n [OUT] ",
        "output": "bolt HasProperty tight",
        "data_id": 352
    },
    {
        "id": "task1510-2ece2ad50756402c988522694c612804",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arch is part of wall\n [OUT] ",
        "output": "arch PartOf wall",
        "data_id": 353
    },
    {
        "id": "task1510-270d79510c024f428ffd1b5f4659d5f5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] article is a kind of piece\n [OUT] ",
        "output": "article IsA piece",
        "data_id": 354
    },
    {
        "id": "task1510-cdf2d84e0bfa49ccbfdd849759dac4ea",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] agreement can be used with the same meaning of deal\n [OUT] ",
        "output": "agreement Synonym deal",
        "data_id": 355
    },
    {
        "id": "task1510-7a55f21c64454addbf032d3e356150da",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can have or can contain object\n [OUT] ",
        "output": "box HasA object",
        "data_id": 356
    },
    {
        "id": "task1510-0241b4cbda304709b3841c073500e2a4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] branch can be used as the opposite of center\n [OUT] ",
        "output": "branch Antonym center",
        "data_id": 357
    },
    {
        "id": "task1510-ee9d38e13585459e83ad2c5b06e1bdfc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] admire is a kind of respect\n [OUT] ",
        "output": "admire IsA respect",
        "data_id": 358
    },
    {
        "id": "task1510-ea1763e137c5408bb49f8718a79fb893",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blade is part of knife\n [OUT] ",
        "output": "blade PartOf knife",
        "data_id": 359
    },
    {
        "id": "task1510-4635629b2d4c40c68ef889b531e1401b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used with the same meaning of construction\n [OUT] ",
        "output": "build Synonym construction",
        "data_id": 360
    },
    {
        "id": "task1510-9835051873a54eb287dd51ac3c9fcabb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark is a kind of talk\n [OUT] ",
        "output": "bark IsA talk",
        "data_id": 361
    },
    {
        "id": "task1510-3f0dfa74036d4d6fbb26f11edd899fa3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon can have or can contain air\n [OUT] ",
        "output": "balloon HasA air",
        "data_id": 362
    },
    {
        "id": "task1510-8c2356685c8c413f8818238c924ab620",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alcohol is a kind of drug\n [OUT] ",
        "output": "alcohol IsA drug",
        "data_id": 363
    },
    {
        "id": "task1510-3ea6f27cb2a040a28954d78cb373e3ca",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beautiful can be used as the opposite of nasty\n [OUT] ",
        "output": "beautiful Antonym nasty",
        "data_id": 364
    },
    {
        "id": "task1510-59624b01b4e142658e79a7cb1704809c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle is made of glass\n [OUT] ",
        "output": "bottle MadeOf glass",
        "data_id": 365
    },
    {
        "id": "task1510-b28421cf77e9484785bce21f84f8d71e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breast is part of chicken\n [OUT] ",
        "output": "breast PartOf chicken",
        "data_id": 366
    },
    {
        "id": "task1510-ad63164391664e7aa93889d16ca94921",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball can be characterized by cool\n [OUT] ",
        "output": "basketball HasProperty cool",
        "data_id": 367
    },
    {
        "id": "task1510-3f6492d6ad344850a9e97ed489798525",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used with the same meaning of increase\n [OUT] ",
        "output": "build Synonym increase",
        "data_id": 368
    },
    {
        "id": "task1510-c13c39e5de364f50a9afd240b00ffd65",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can be used as the opposite of leg\n [OUT] ",
        "output": "body Antonym leg",
        "data_id": 369
    },
    {
        "id": "task1510-a78b36407b37473facac5a9b813f6d68",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach can be used as the opposite of separate\n [OUT] ",
        "output": "attach Antonym separate",
        "data_id": 370
    },
    {
        "id": "task1510-bc3caaf1cf3040de805a9aebe020b3ce",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread is a kind of food\n [OUT] ",
        "output": "bread IsA food",
        "data_id": 371
    },
    {
        "id": "task1510-b333978e1f1f49e48560293f7a8c8f0a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by healthy\n [OUT] ",
        "output": "apple HasProperty healthy",
        "data_id": 372
    },
    {
        "id": "task1510-2b92204a3ab34963aad89061b7c8da0c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bright can be used as the opposite of dark\n [OUT] ",
        "output": "bright Antonym dark",
        "data_id": 373
    },
    {
        "id": "task1510-95f4354a933940a9b8c5686fa8c8bd49",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] active can be used with the same meaning of work\n [OUT] ",
        "output": "active Synonym work",
        "data_id": 374
    },
    {
        "id": "task1510-50350ac40829485dbe95a7baf96aa06e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brake can be used as the opposite of pedal\n [OUT] ",
        "output": "brake Antonym pedal",
        "data_id": 375
    },
    {
        "id": "task1510-b05461e076be4059a3bbd0faa049ad26",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breakfast can be used as the opposite of dinner\n [OUT] ",
        "output": "breakfast Antonym dinner",
        "data_id": 376
    },
    {
        "id": "task1510-c6784657744d458f876b298f1e7c04d5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alcohol is made of rice\n [OUT] ",
        "output": "alcohol MadeOf rice",
        "data_id": 377
    },
    {
        "id": "task1510-9edf3493873543e4b4009b3e1f823e60",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of energy\n [OUT] ",
        "output": "action Synonym energy",
        "data_id": 378
    },
    {
        "id": "task1510-963a4570d8d44692b058477c3fff58cc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box is a kind of sport\n [OUT] ",
        "output": "box IsA sport",
        "data_id": 379
    },
    {
        "id": "task1510-c408b33b5d0c48fea36426cfdfd4ceee",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] busy is a kind of work\n [OUT] ",
        "output": "busy IsA work",
        "data_id": 380
    },
    {
        "id": "task1510-c445b03413cf421d8d06f520e25aa5bc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be used with the same meaning of atmosphere\n [OUT] ",
        "output": "air Synonym atmosphere",
        "data_id": 381
    },
    {
        "id": "task1510-471d6a4fb3bc4a39a51a2c4a9bd05658",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aisle can be used as the opposite of seat\n [OUT] ",
        "output": "aisle Antonym seat",
        "data_id": 382
    },
    {
        "id": "task1510-1440d7371bd042789e53b12f746bd23f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball is a kind of sport\n [OUT] ",
        "output": "basketball IsA sport",
        "data_id": 383
    },
    {
        "id": "task1510-93b5939624284c929c5ad1bc9faa2319",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build is a kind of make\n [OUT] ",
        "output": "build IsA make",
        "data_id": 384
    },
    {
        "id": "task1510-d84d16f7820e410aaa45b0a22cc37ed8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] album can be used with the same meaning of disk\n [OUT] ",
        "output": "album Synonym disk",
        "data_id": 385
    },
    {
        "id": "task1510-153e8fa5a5514d9b80e7fb47c850e6df",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon is a kind of sport\n [OUT] ",
        "output": "balloon IsA sport",
        "data_id": 386
    },
    {
        "id": "task1510-e113c8ccec3444d8be3ae317522e7064",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] add can be used as the opposite of take_away\n [OUT] ",
        "output": "add Antonym take_away",
        "data_id": 387
    },
    {
        "id": "task1510-8a63cbdb018047f8ac01ce49d0f94287",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain body\n [OUT] ",
        "output": "animal HasA body",
        "data_id": 388
    },
    {
        "id": "task1510-6c6064be76404ae7a1621a2a27ef50c4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by amuse\n [OUT] ",
        "output": "baby HasProperty amuse",
        "data_id": 389
    },
    {
        "id": "task1510-8d29cf3406f04b4aa63de50cabaa7cae",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by satisfy\n [OUT] ",
        "output": "baby HasProperty satisfy",
        "data_id": 390
    },
    {
        "id": "task1510-dcbb3604286048e3be71fbd80fce3764",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread is made of grain\n [OUT] ",
        "output": "bread MadeOf grain",
        "data_id": 391
    },
    {
        "id": "task1510-89af7e4e4474415086ee89dd06bc49d0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art is a kind of play\n [OUT] ",
        "output": "art IsA play",
        "data_id": 392
    },
    {
        "id": "task1510-1c2084fcf01a445ab612bd69085b6d6f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america is a kind of country\n [OUT] ",
        "output": "america IsA country",
        "data_id": 393
    },
    {
        "id": "task1510-65ce53a2b2074af3ab0472785b065339",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] actress is a kind of human\n [OUT] ",
        "output": "actress IsA human",
        "data_id": 394
    },
    {
        "id": "task1510-c09874e338d94facb348a6ae788038a0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be used as the opposite of chair\n [OUT] ",
        "output": "bed Antonym chair",
        "data_id": 395
    },
    {
        "id": "task1510-e5a8c902a39f4131a7127233dde24428",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] age is a kind of develop\n [OUT] ",
        "output": "age IsA develop",
        "data_id": 396
    },
    {
        "id": "task1510-ffbb9e78ee7e4e4794a9b2b84883c2bc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball is part of human\n [OUT] ",
        "output": "ball PartOf human",
        "data_id": 397
    },
    {
        "id": "task1510-9a29c309611642629e74c56f067d0201",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer can be characterized by liquid\n [OUT] ",
        "output": "beer HasProperty liquid",
        "data_id": 398
    },
    {
        "id": "task1510-b8f44a475a9c4fc3989abcdea087e313",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butter is made of milk\n [OUT] ",
        "output": "butter MadeOf milk",
        "data_id": 399
    },
    {
        "id": "task1510-eb6409cea1664c228a2b9ed2ae89e1a2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boyfriend can be used with the same meaning of friend\n [OUT] ",
        "output": "boyfriend Synonym friend",
        "data_id": 400
    },
    {
        "id": "task1510-297a58fc5a434549976a61b2e7c4502b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back is part of trunk\n [OUT] ",
        "output": "back PartOf trunk",
        "data_id": 401
    },
    {
        "id": "task1510-6de52e1b0e164171a4b286f71d018754",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark can be characterized by rough\n [OUT] ",
        "output": "bark HasProperty rough",
        "data_id": 402
    },
    {
        "id": "task1510-26f779ecb84f4f629c15333519f9a1ec",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple is part of core\n [OUT] ",
        "output": "apple PartOf core",
        "data_id": 403
    },
    {
        "id": "task1510-72dd3b0d08284497a58cbb032e7d4715",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] button can be used with the same meaning of knob\n [OUT] ",
        "output": "button Synonym knob",
        "data_id": 404
    },
    {
        "id": "task1510-a496cb524ce94fce87f83cbd6065708d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be used as the opposite of bug\n [OUT] ",
        "output": "animal Antonym bug",
        "data_id": 405
    },
    {
        "id": "task1510-bf4d084a50b5498390979e91bff621cb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby is a kind of girl\n [OUT] ",
        "output": "baby IsA girl",
        "data_id": 406
    },
    {
        "id": "task1510-b53d46f1f3754dcc945a510e1286f793",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bind is part of book\n [OUT] ",
        "output": "bind PartOf book",
        "data_id": 407
    },
    {
        "id": "task1510-9c321626fff94ba0b4530f83ceab6511",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is part of guitar\n [OUT] ",
        "output": "bridge PartOf guitar",
        "data_id": 408
    },
    {
        "id": "task1510-a6aac45427dd4ff383f3d2e476e27e7e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Beach is made of sand\n [OUT] ",
        "output": "beach MadeOf sand",
        "data_id": 409
    },
    {
        "id": "task1510-9ba0ca85bcf74dcba32e66ea15c3d736",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bath is a kind of place\n [OUT] ",
        "output": "bath IsA place",
        "data_id": 410
    },
    {
        "id": "task1510-b1b8876193f441c8beaddd0e82a22fe9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air is made of molecule\n [OUT] ",
        "output": "air MadeOf molecule",
        "data_id": 411
    },
    {
        "id": "task1510-2f3a27ea7f604d37b7664d76d889320a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brain is a kind of organ\n [OUT] ",
        "output": "brain IsA organ",
        "data_id": 412
    },
    {
        "id": "task1510-e6a9fb33d60e4e13a9234b4209709efa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger can be used as the opposite of calm\n [OUT] ",
        "output": "anger Antonym calm",
        "data_id": 413
    },
    {
        "id": "task1510-614b911dc6604d6c87e55d5e44049d7f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathtub can be used with the same meaning of bath\n [OUT] ",
        "output": "bathtub Synonym bath",
        "data_id": 414
    },
    {
        "id": "task1510-795e1161c29847118da71b4bb7c6321f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] assemble can be used as the opposite of destroy\n [OUT] ",
        "output": "assemble Antonym destroy",
        "data_id": 415
    },
    {
        "id": "task1510-eaeb235dc43744cd9560cf10c66ffc62",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] appear can be used with the same meaning of show\n [OUT] ",
        "output": "appear Synonym show",
        "data_id": 416
    },
    {
        "id": "task1510-8735ab6032d142d0a4f314f386b991f0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger can be characterized by unpleasant\n [OUT] ",
        "output": "anger HasProperty unpleasant",
        "data_id": 417
    },
    {
        "id": "task1510-b526989b17a4493f9a1719d6c7e8642a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bill can be characterized by due\n [OUT] ",
        "output": "bill HasProperty due",
        "data_id": 418
    },
    {
        "id": "task1510-f2dc0e8da7454098b4e58d530dbf55a8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain cover\n [OUT] ",
        "output": "book HasA cover",
        "data_id": 419
    },
    {
        "id": "task1510-d1184c3c7f4244a497d5e7b7b6c87a8e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butterfly can be characterized by beautiful\n [OUT] ",
        "output": "butterfly HasProperty beautiful",
        "data_id": 420
    },
    {
        "id": "task1510-3313fe99e3404739a91af51407787567",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon is a kind of rubber\n [OUT] ",
        "output": "balloon IsA rubber",
        "data_id": 421
    },
    {
        "id": "task1510-7ec5aa283ae841bb933c20722f56236a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle is a kind of store\n [OUT] ",
        "output": "bottle IsA store",
        "data_id": 422
    },
    {
        "id": "task1510-d8dfd696c0ff43899e5d67db2bb40e26",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be used as the opposite of white\n [OUT] ",
        "output": "black Antonym white",
        "data_id": 423
    },
    {
        "id": "task1510-599513fc99084c5cbb0d3bbf0327b067",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bow can be characterized by fun\n [OUT] ",
        "output": "bow HasProperty fun",
        "data_id": 424
    },
    {
        "id": "task1510-d07807c9d1f54a28b76542194980e9cb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin can be used as the opposite of finish\n [OUT] ",
        "output": "begin Antonym finish",
        "data_id": 425
    },
    {
        "id": "task1510-594b5600d6c34e1cbbb9814ec711af62",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be used as the opposite of bath\n [OUT] ",
        "output": "bed Antonym bath",
        "data_id": 426
    },
    {
        "id": "task1510-828567c350db4c57a711aa6807d67341",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be used as the opposite of tissue\n [OUT] ",
        "output": "bone Antonym tissue",
        "data_id": 427
    },
    {
        "id": "task1510-abd287b2f20c4c58831c7db04d457460",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bend can be used with the same meaning of incline\n [OUT] ",
        "output": "bend Synonym incline",
        "data_id": 428
    },
    {
        "id": "task1510-2053acb453ba48fe8f629b4853765bd5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belief can be used as the opposite of fact\n [OUT] ",
        "output": "belief Antonym fact",
        "data_id": 429
    },
    {
        "id": "task1510-aa86e74aabe34196893bfb6a89c746e4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bag can be characterized by blue\n [OUT] ",
        "output": "bag HasProperty blue",
        "data_id": 430
    },
    {
        "id": "task1510-79713d86526046f4839872954fe42cd7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Appear can be used with the same meaning of present\n [OUT] ",
        "output": "appear Synonym present",
        "data_id": 431
    },
    {
        "id": "task1510-89cf4072e902455c97119d473d4c946a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of make\n [OUT] ",
        "output": "break Antonym make",
        "data_id": 432
    },
    {
        "id": "task1510-4c4a2944d9cf4d0e9d97bb634852c2ca",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be used as the opposite of mammal\n [OUT] ",
        "output": "bird Antonym mammal",
        "data_id": 433
    },
    {
        "id": "task1510-328a0f0153bb4e33bfe285c2e6ff88f8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body is part of human_be\n [OUT] ",
        "output": "body PartOf human_be",
        "data_id": 434
    },
    {
        "id": "task1510-d026cd6e9b2c4506b373045bd8636f18",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer can be characterized by tasty\n [OUT] ",
        "output": "beer HasProperty tasty",
        "data_id": 435
    },
    {
        "id": "task1510-24e5ef0896c341aa8e4df40e390896a1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art can be used as the opposite of ugly\n [OUT] ",
        "output": "art Antonym ugly",
        "data_id": 436
    },
    {
        "id": "task1510-d5e829dc19274e58a086d77f4c7b1066",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] angel is a kind of person\n [OUT] ",
        "output": "angel IsA person",
        "data_id": 437
    },
    {
        "id": "task1510-6c441a3a27b54f7fbfb8321065d7dfbf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boyfriend can be used with the same meaning of lover\n [OUT] ",
        "output": "boyfriend Synonym lover",
        "data_id": 438
    },
    {
        "id": "task1510-c0eb10c2c0bc401eb46f17f03d53c4f0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] advance can be used with the same meaning of improve\n [OUT] ",
        "output": "advance Synonym improve",
        "data_id": 439
    },
    {
        "id": "task1510-a95305ea1d514a6ca1ce59beaa173be8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball is a kind of game\n [OUT] ",
        "output": "basketball IsA game",
        "data_id": 440
    },
    {
        "id": "task1510-3e5a815985db44968e2d48c95e354df0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back can be used as the opposite of main\n [OUT] ",
        "output": "back Antonym main",
        "data_id": 441
    },
    {
        "id": "task1510-cdf410ad513d4ff78d0317e87a3e92b0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can be used as the opposite of kitchen\n [OUT] ",
        "output": "bedroom Antonym kitchen",
        "data_id": 442
    },
    {
        "id": "task1510-ea4b1a8bacba4c318dc298ca76432e3c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by square\n [OUT] ",
        "output": "book HasProperty square",
        "data_id": 443
    },
    {
        "id": "task1510-7f45545a6ad14089980fa9d324e24797",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beat is true then also hit is true\n [OUT] ",
        "output": "beat Entails hit",
        "data_id": 444
    },
    {
        "id": "task1510-573b3a5802b74e7fbbf244e655fbac82",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beef can be characterized by good\n [OUT] ",
        "output": "beef HasProperty good",
        "data_id": 445
    },
    {
        "id": "task1510-96e083b5b39245bb9ab151073dd5484c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used with the same meaning of split\n [OUT] ",
        "output": "break Synonym split",
        "data_id": 446
    },
    {
        "id": "task1510-5101b5f750814dbe847e8d0695112e5f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bull can be used as the opposite of female\n [OUT] ",
        "output": "bull Antonym female",
        "data_id": 447
    },
    {
        "id": "task1510-c0818a37d2414cc9a6d7ec1f814cfa41",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] answer can be used as the opposite of question\n [OUT] ",
        "output": "answer Antonym question",
        "data_id": 448
    },
    {
        "id": "task1510-70aba45048e0436aa0b3e3d8087721e6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used with the same meaning of hit\n [OUT] ",
        "output": "blow Synonym hit",
        "data_id": 449
    },
    {
        "id": "task1510-ba686f6ca69f421fb8a057766507efcb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back is part of chair\n [OUT] ",
        "output": "back PartOf chair",
        "data_id": 450
    },
    {
        "id": "task1510-7c77aea0d61047c5a7da233a64909643",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon can be characterized by colorful\n [OUT] ",
        "output": "balloon HasProperty colorful",
        "data_id": 451
    },
    {
        "id": "task1510-56b772391a674ba48e01ed0265702610",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breathe can be characterized by good\n [OUT] ",
        "output": "breathe HasProperty good",
        "data_id": 452
    },
    {
        "id": "task1510-83874ac86f9d4a789aa1b419f279c6cc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball can be characterized by black\n [OUT] ",
        "output": "ball HasProperty black",
        "data_id": 453
    },
    {
        "id": "task1510-26da97d8f54f46dc86bc5a6fb18af0a9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benevolent can be used as the opposite of evil\n [OUT] ",
        "output": "benevolent Antonym evil",
        "data_id": 454
    },
    {
        "id": "task1510-938e890128254ce0a52e00a6df7be429",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ascend is a kind of change\n [OUT] ",
        "output": "ascend IsA change",
        "data_id": 455
    },
    {
        "id": "task1510-dfb703ac1c254c40a33d283a9721f8c1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Board is a kind of organization\n [OUT] ",
        "output": "board IsA organization",
        "data_id": 456
    },
    {
        "id": "task1510-2db638af37fd42fb9bcf92272d64e3f1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] article is made of information\n [OUT] ",
        "output": "article MadeOf information",
        "data_id": 457
    },
    {
        "id": "task1510-cca4ab10bceb4acdadeda86b388e9835",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boredom can be characterized by bad\n [OUT] ",
        "output": "boredom HasProperty bad",
        "data_id": 458
    },
    {
        "id": "task1510-e82d8be3c3054ca081badada546039dc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be characterized by tall\n [OUT] ",
        "output": "build HasProperty tall",
        "data_id": 459
    },
    {
        "id": "task1510-571f3bff1b4841c9b5d7b76dd127201b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer can have or can contain water\n [OUT] ",
        "output": "beer HasA water",
        "data_id": 460
    },
    {
        "id": "task1510-886899c6b451438aa458e9535411f4cd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of conflict\n [OUT] ",
        "output": "action Synonym conflict",
        "data_id": 461
    },
    {
        "id": "task1510-cf0df5ac80be454f9d561c08d06b7baa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belief can be characterized by good\n [OUT] ",
        "output": "belief HasProperty good",
        "data_id": 462
    },
    {
        "id": "task1510-60887a12d59147a99663220ff71f93c1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be used as the opposite of earth\n [OUT] ",
        "output": "air Antonym earth",
        "data_id": 463
    },
    {
        "id": "task1510-8cd7aaa76a0e4c56aca846d67d280575",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach can be used with the same meaning of connect\n [OUT] ",
        "output": "attach Synonym connect",
        "data_id": 464
    },
    {
        "id": "task1510-4d9c97b5d7e145feb70333847047c100",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathtub is part of bathroom\n [OUT] ",
        "output": "bathtub PartOf bathroom",
        "data_id": 465
    },
    {
        "id": "task1510-887eaa0acb804cbeb19b467d2b81189e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment can have or can contain kitchen\n [OUT] ",
        "output": "apartment HasA kitchen",
        "data_id": 466
    },
    {
        "id": "task1510-00d727d5dec04ebfaf2c562481471aa4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can have or can contain organ\n [OUT] ",
        "output": "body HasA organ",
        "data_id": 467
    },
    {
        "id": "task1510-870e1baa343b401cb96532033939ae09",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art is a kind of creation\n [OUT] ",
        "output": "art IsA creation",
        "data_id": 468
    },
    {
        "id": "task1510-d117470ee0ca461288f4c0124a114f6d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] automobile can be used with the same meaning of car\n [OUT] ",
        "output": "automobile Synonym car",
        "data_id": 469
    },
    {
        "id": "task1510-59a2c439632c4f939cc19b06c8fb2f24",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butch is a kind of person\n [OUT] ",
        "output": "butch IsA person",
        "data_id": 470
    },
    {
        "id": "task1510-7e39cb8a32b04de0b2b5f0368eefdb16",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger is a kind of feel\n [OUT] ",
        "output": "anger IsA feel",
        "data_id": 471
    },
    {
        "id": "task1510-56007eb12bfb476fadbeef1e33b19923",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Barbecue is a kind of cook\n [OUT] ",
        "output": "barbecue IsA cook",
        "data_id": 472
    },
    {
        "id": "task1510-47008cb8cba04d6b8f977829c0f331d3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin can be used with the same meaning of initial\n [OUT] ",
        "output": "begin Synonym initial",
        "data_id": 473
    },
    {
        "id": "task1510-be67400f435348c180a85cd5ba4f784a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain meat\n [OUT] ",
        "output": "animal HasA meat",
        "data_id": 474
    },
    {
        "id": "task1510-9d5bca5729634c0cb6a494426210b14d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt is part of lock\n [OUT] ",
        "output": "bolt PartOf lock",
        "data_id": 475
    },
    {
        "id": "task1510-5bada9cf4937415ba25f423711a49b13",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss is a kind of person\n [OUT] ",
        "output": "boss IsA person",
        "data_id": 476
    },
    {
        "id": "task1510-17813a2ecf4d4257a7e13b64d3fb0748",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is a kind of play\n [OUT] ",
        "output": "bowl IsA play",
        "data_id": 477
    },
    {
        "id": "task1510-cddc87e5e5c54ec2b8fdcbc776ce0e2f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boot can be characterized by black\n [OUT] ",
        "output": "boot HasProperty black",
        "data_id": 478
    },
    {
        "id": "task1510-4fd9cdc23fa449f8af6c51a8cdccfd07",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain author\n [OUT] ",
        "output": "book HasA author",
        "data_id": 479
    },
    {
        "id": "task1510-3189dc758a5946db9ff8cb515effd587",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach can be used with the same meaning of tie\n [OUT] ",
        "output": "attach Synonym tie",
        "data_id": 480
    },
    {
        "id": "task1510-6df082ba771a46e6a2164c99aefd9db2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] agreement can be used with the same meaning of understand\n [OUT] ",
        "output": "agreement Synonym understand",
        "data_id": 481
    },
    {
        "id": "task1510-026b20f090b046048c372c26e4b52503",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brush can be used with the same meaning of tail\n [OUT] ",
        "output": "brush Synonym tail",
        "data_id": 482
    },
    {
        "id": "task1510-0b10bb5dc475466bbbf746cce7b36ab7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can be used with the same meaning of bath\n [OUT] ",
        "output": "bathroom Synonym bath",
        "data_id": 483
    },
    {
        "id": "task1510-d72c1a92592b455f86d476f24113ad35",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be used as the opposite of color\n [OUT] ",
        "output": "black Antonym color",
        "data_id": 484
    },
    {
        "id": "task1510-532f4282f6804df38766045110c21378",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act is a kind of communication\n [OUT] ",
        "output": "act IsA communication",
        "data_id": 485
    },
    {
        "id": "task1510-8a7ab7f24c814c08b59eec83b0473741",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Bean is a kind of film\n [OUT] ",
        "output": "bean IsA film",
        "data_id": 486
    },
    {
        "id": "task1510-02dd89467a044aac88087e976ce8bfa8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] buy can be used with the same meaning of shop\n [OUT] ",
        "output": "buy Synonym shop",
        "data_id": 487
    },
    {
        "id": "task1510-d8cec5d3c4fa41d28534b2cf938bbbcd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brass can be used with the same meaning of brass_instrument\n [OUT] ",
        "output": "brass Synonym brass_instrument",
        "data_id": 488
    },
    {
        "id": "task1510-c87d376031ac4179bdc647e3cafd3bdc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball can be characterized by fun\n [OUT] ",
        "output": "basketball HasProperty fun",
        "data_id": 489
    },
    {
        "id": "task1510-d89a03032d5c45a58e80d6fc93f70819",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat can be used with the same meaning of ship\n [OUT] ",
        "output": "boat Synonym ship",
        "data_id": 490
    },
    {
        "id": "task1510-7f037be2ad844e5db2199814f8ff3aef",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be characterized by square\n [OUT] ",
        "output": "bed HasProperty square",
        "data_id": 491
    },
    {
        "id": "task1510-72871f300d7f4ada96f11addc8aae476",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art can be used with the same meaning of creation\n [OUT] ",
        "output": "art Synonym creation",
        "data_id": 492
    },
    {
        "id": "task1510-a1581aa495154b6f9f848d0c8fda4ea7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by young\n [OUT] ",
        "output": "baby HasProperty young",
        "data_id": 493
    },
    {
        "id": "task1510-a44732382fa94eb0a1444345c2031d1d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal is a kind of life\n [OUT] ",
        "output": "animal IsA life",
        "data_id": 494
    },
    {
        "id": "task1510-31098e1046c74b2b91cefc024ee8e418",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benefit can be used with the same meaning of aid\n [OUT] ",
        "output": "benefit Synonym aid",
        "data_id": 495
    },
    {
        "id": "task1510-7bf776680a0e407b94403eca5ae3dd3a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bank is a kind of place\n [OUT] ",
        "output": "bank IsA place",
        "data_id": 496
    },
    {
        "id": "task1510-9ee26baa8f9349a683c3d627d3d9556c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beauty can be used as the opposite of ugly\n [OUT] ",
        "output": "beauty Antonym ugly",
        "data_id": 497
    },
    {
        "id": "task1510-cfa15ff7d9a64313836dcb03cb219ea9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] active can be used as the opposite of slow\n [OUT] ",
        "output": "active Antonym slow",
        "data_id": 498
    },
    {
        "id": "task1510-bd18dc53f203440c941e44e33cbceb64",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bat is a kind of hit\n [OUT] ",
        "output": "bat IsA hit",
        "data_id": 499
    },
    {
        "id": "task1510-6cc2bc87a2204748b5fd18436c989521",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brook can be used with the same meaning of stream\n [OUT] ",
        "output": "brook Synonym stream",
        "data_id": 500
    },
    {
        "id": "task1510-e44175f0557f44cfabbf21abfa8e61ba",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blade is part of sword\n [OUT] ",
        "output": "blade PartOf sword",
        "data_id": 501
    },
    {
        "id": "task1510-5f0d11a2f57b4b74a24f4dccbd0dd9d5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bitch can be used with the same meaning of female\n [OUT] ",
        "output": "bitch Synonym female",
        "data_id": 502
    },
    {
        "id": "task1510-18ded24744e949f891e461b4d94af6e3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be used as the opposite of land\n [OUT] ",
        "output": "air Antonym land",
        "data_id": 503
    },
    {
        "id": "task1510-c11a5fbcdc5440a6aed339e92961ee9d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby is a kind of person\n [OUT] ",
        "output": "baby IsA person",
        "data_id": 504
    },
    {
        "id": "task1510-5273f236410e42269c709fe60756ac36",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act can be used with the same meaning of performance\n [OUT] ",
        "output": "act Synonym performance",
        "data_id": 505
    },
    {
        "id": "task1510-56481cb85f1247a989a6d43d44910c80",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue can be used as the opposite of yellow\n [OUT] ",
        "output": "blue Antonym yellow",
        "data_id": 506
    },
    {
        "id": "task1510-e97fb692338d48d0a2d1d5f13fe0799e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aisle is a kind of passageway\n [OUT] ",
        "output": "aisle IsA passageway",
        "data_id": 507
    },
    {
        "id": "task1510-0dc14a20956c4d38b81af397171b110f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bath can have or can contain water\n [OUT] ",
        "output": "bath HasA water",
        "data_id": 508
    },
    {
        "id": "task1510-47d738282a674e89b880a6a9d0ab2426",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Bark is a kind of tan\n [OUT] ",
        "output": "bark IsA tan",
        "data_id": 509
    },
    {
        "id": "task1510-1e1d95b2a34540dabfb9ad5fdc0b8c89",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is a kind of action\n [OUT] ",
        "output": "bowl IsA action",
        "data_id": 510
    },
    {
        "id": "task1510-1c0973f3aee841afac3482bfbeffc375",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] automobile can have or can contain trunk\n [OUT] ",
        "output": "automobile HasA trunk",
        "data_id": 511
    },
    {
        "id": "task1510-42bdce6de8414e9bb82c24e61c656b9b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bag is made of fabric\n [OUT] ",
        "output": "bag MadeOf fabric",
        "data_id": 512
    },
    {
        "id": "task1510-f3d7a7ce4b5e4efc9460c3dd80cf62e6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beach is a kind of shore\n [OUT] ",
        "output": "beach IsA shore",
        "data_id": 513
    },
    {
        "id": "task1510-a0c129165d164871b4f495a38d5b6b3c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] appear can be used with the same meaning of come\n [OUT] ",
        "output": "appear Synonym come",
        "data_id": 514
    },
    {
        "id": "task1510-8b4393a5079c496f926747bf1c3b68b5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Approach can be used with the same meaning of advance\n [OUT] ",
        "output": "approach Synonym advance",
        "data_id": 515
    },
    {
        "id": "task1510-ca5ad6e7788c42f782631ae63e0369bd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bear can be used as the opposite of lion\n [OUT] ",
        "output": "bear Antonym lion",
        "data_id": 516
    },
    {
        "id": "task1510-099e304824b44fe9b78f63eb9dedc243",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] actor can be used with the same meaning of actress\n [OUT] ",
        "output": "actor Synonym actress",
        "data_id": 517
    },
    {
        "id": "task1510-0d821391c8b443ca97c9a8f350175c1c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] banjo is a kind of string_instrument\n [OUT] ",
        "output": "banjo IsA string_instrument",
        "data_id": 518
    },
    {
        "id": "task1510-d39299e63f074283b6ba8b4670f00d96",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] airplane can be characterized by heavy\n [OUT] ",
        "output": "airplane HasProperty heavy",
        "data_id": 519
    },
    {
        "id": "task1510-bb02de8d69e0480b80f3b29631ccafa5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can have or can contain book\n [OUT] ",
        "output": "box HasA book",
        "data_id": 520
    },
    {
        "id": "task1510-8fd4917ecc894802b3dfbf3073c59881",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl can be characterized by hollow\n [OUT] ",
        "output": "bowl HasProperty hollow",
        "data_id": 521
    },
    {
        "id": "task1510-1d9d4e5cc0b54cc3a5e8933815d4663d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn is a kind of damage\n [OUT] ",
        "output": "burn IsA damage",
        "data_id": 522
    },
    {
        "id": "task1510-c48158c5eaa040e48027d50a29ad6a61",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball is a kind of game\n [OUT] ",
        "output": "baseball IsA game",
        "data_id": 523
    },
    {
        "id": "task1510-72ae0846e54b40dc8d057f8cdf10ac1d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back can be used with the same meaning of rear\n [OUT] ",
        "output": "back Synonym rear",
        "data_id": 524
    },
    {
        "id": "task1510-0d38698d6ae148288cb8a1e152bba252",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] annoy can be characterized by bad\n [OUT] ",
        "output": "annoy HasProperty bad",
        "data_id": 525
    },
    {
        "id": "task1510-9f1515d0c7764e22b913db0e9e4726b4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] buy is a kind of get\n [OUT] ",
        "output": "buy IsA get",
        "data_id": 526
    },
    {
        "id": "task1510-6dc85cfeed434136b3ecd50fe0674032",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball is a kind of hobby\n [OUT] ",
        "output": "baseball IsA hobby",
        "data_id": 527
    },
    {
        "id": "task1510-d74b4b30331348cb9edf7ff45fdea8e0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal is part of nature\n [OUT] ",
        "output": "animal PartOf nature",
        "data_id": 528
    },
    {
        "id": "task1510-ef2421819fc94e7fab409fe8b298617a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breathe is a kind of exist\n [OUT] ",
        "output": "breathe IsA exist",
        "data_id": 529
    },
    {
        "id": "task1510-8a5336dd5d5e418ab0ef0e3be23b97ad",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brake is part of car\n [OUT] ",
        "output": "brake PartOf car",
        "data_id": 530
    },
    {
        "id": "task1510-3e6907930a0d4a31b1e9140145283082",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be used with the same meaning of dark\n [OUT] ",
        "output": "black Synonym dark",
        "data_id": 531
    },
    {
        "id": "task1510-1a9cc7ffbb194ca4b3a4eb1adfcb2d74",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by important\n [OUT] ",
        "output": "book HasProperty important",
        "data_id": 532
    },
    {
        "id": "task1510-2a843c06d7314da6bc41ab771345f86c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can be characterized by beautiful\n [OUT] ",
        "output": "body HasProperty beautiful",
        "data_id": 533
    },
    {
        "id": "task1510-12b0354d30f649beb2b8514a1952c0ae",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air is a kind of gas\n [OUT] ",
        "output": "air IsA gas",
        "data_id": 534
    },
    {
        "id": "task1510-28cfd4b1b3754de98006b88ef17431e3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bright can be used as the opposite of dull\n [OUT] ",
        "output": "bright Antonym dull",
        "data_id": 535
    },
    {
        "id": "task1510-32595e92a6b346b483f35155d75100f8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black is a kind of color\n [OUT] ",
        "output": "black IsA color",
        "data_id": 536
    },
    {
        "id": "task1510-9259d5c39ce24a29a145b2c9f10f9381",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance is a kind of scale\n [OUT] ",
        "output": "balance IsA scale",
        "data_id": 537
    },
    {
        "id": "task1510-2194cbaa5ce34310aa72559a1cd58a0e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can have or can contain wing\n [OUT] ",
        "output": "bird HasA wing",
        "data_id": 538
    },
    {
        "id": "task1510-79949a5bd1754ec7896718333aadeb3c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breathe is true then also exhale is true\n [OUT] ",
        "output": "breathe Entails exhale",
        "data_id": 539
    },
    {
        "id": "task1510-ae752b583ae448a9885d1d0f4ee671c3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ax is made of metal\n [OUT] ",
        "output": "ax MadeOf metal",
        "data_id": 540
    },
    {
        "id": "task1510-97081d90ec5c41a9a6589fdfa89e7ab4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] actress can be used as the opposite of actor\n [OUT] ",
        "output": "actress Antonym actor",
        "data_id": 541
    },
    {
        "id": "task1510-4c96bb3d60344b229028516511f5cee6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alley can be used with the same meaning of aisle\n [OUT] ",
        "output": "alley Synonym aisle",
        "data_id": 542
    },
    {
        "id": "task1510-25556bc876c54fcaa0b06cee7c5c9c2e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bat is a kind of animal\n [OUT] ",
        "output": "bat IsA animal",
        "data_id": 543
    },
    {
        "id": "task1510-693d8f7f01814061b038a73138c26e4b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] angel can be characterized by good\n [OUT] ",
        "output": "angel HasProperty good",
        "data_id": 544
    },
    {
        "id": "task1510-fe1258f1f0494d5da2bc7ce29e8b1eb4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bill can be used with the same meaning of note\n [OUT] ",
        "output": "bill Synonym note",
        "data_id": 545
    },
    {
        "id": "task1510-3f2243def6514160bfd0cb633581adcc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] active can be used with the same meaning of busy\n [OUT] ",
        "output": "active Synonym busy",
        "data_id": 546
    },
    {
        "id": "task1510-9df28c7504b5408ca7dd687a94a47ac7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] angel can have or can contain wing\n [OUT] ",
        "output": "angel HasA wing",
        "data_id": 547
    },
    {
        "id": "task1510-56cf5ec5bc9144edbcdcfdadcaad10a1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow is a kind of sound\n [OUT] ",
        "output": "blow IsA sound",
        "data_id": 548
    },
    {
        "id": "task1510-10703ed94a5c4a30af5f69d4f43c6159",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn can be used as the opposite of ice\n [OUT] ",
        "output": "burn Antonym ice",
        "data_id": 549
    },
    {
        "id": "task1510-60f273e91de94098bb2718b7f9af04e3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by alive\n [OUT] ",
        "output": "bird HasProperty alive",
        "data_id": 550
    },
    {
        "id": "task1510-e08b42c924f34154aeb7fcf82156681c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Bat can be used with the same meaning of baseball_bat\n [OUT] ",
        "output": "bat Synonym baseball_bat",
        "data_id": 551
    },
    {
        "id": "task1510-47b8d2498b0b4e5c99edec4b7ba4ca1e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can have or can contain plumb\n [OUT] ",
        "output": "bathroom HasA plumb",
        "data_id": 552
    },
    {
        "id": "task1510-ef0c5f2e92e2445886ed6474df39766f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boredom can be used as the opposite of fun\n [OUT] ",
        "output": "boredom Antonym fun",
        "data_id": 553
    },
    {
        "id": "task1510-97871610101f4a9391fda24c6c2c3f54",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Article is part of newspaper\n [OUT] ",
        "output": "article PartOf newspaper",
        "data_id": 554
    },
    {
        "id": "task1510-a2288272b8b7449681a185d8876b91b1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alphabet can be used as the opposite of number\n [OUT] ",
        "output": "alphabet Antonym number",
        "data_id": 555
    },
    {
        "id": "task1510-b05223645f6146a7bafe4badb2f4a968",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back can be used with the same meaning of reverse\n [OUT] ",
        "output": "back Synonym reverse",
        "data_id": 556
    },
    {
        "id": "task1510-a3e716b6dcc94ba69882f6eb57da3758",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle is made of plastic\n [OUT] ",
        "output": "bottle MadeOf plastic",
        "data_id": 557
    },
    {
        "id": "task1510-02a6c6aac7014f5daeb010cb8da50c4a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] add can be used as the opposite of remove\n [OUT] ",
        "output": "add Antonym remove",
        "data_id": 558
    },
    {
        "id": "task1510-21adee23c5ed4bd28f3b5fc8f1e42310",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] athlete is a kind of human\n [OUT] ",
        "output": "athlete IsA human",
        "data_id": 559
    },
    {
        "id": "task1510-73879de783b946f0b5fe0c62991ddf9a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black is a kind of man\n [OUT] ",
        "output": "black IsA man",
        "data_id": 560
    },
    {
        "id": "task1510-e65ed28137b44f24b1ca12cb66b6756e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build is a kind of develop\n [OUT] ",
        "output": "build IsA develop",
        "data_id": 561
    },
    {
        "id": "task1510-e24fdd1db8b5448ea9962c82e7908345",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] admire can be used as the opposite of dislike\n [OUT] ",
        "output": "admire Antonym dislike",
        "data_id": 562
    },
    {
        "id": "task1510-93aa229330e845d2aec18683de350a6d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is made of clay\n [OUT] ",
        "output": "bowl MadeOf clay",
        "data_id": 563
    },
    {
        "id": "task1510-d105855ae96041d9b2c0cc9016cc305e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boot can be used with the same meaning of hoof\n [OUT] ",
        "output": "boot Synonym hoof",
        "data_id": 564
    },
    {
        "id": "task1510-f719f539832c44d9ab7275c3505d62e9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butch can be used as the opposite of gentle\n [OUT] ",
        "output": "butch Antonym gentle",
        "data_id": 565
    },
    {
        "id": "task1510-733bd5603b994ca1a2f4dfef4778a47e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bind is a kind of cover\n [OUT] ",
        "output": "bind IsA cover",
        "data_id": 566
    },
    {
        "id": "task1510-72fb888d7bae49d98135351f6c247abd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Appear is a kind of perform\n [OUT] ",
        "output": "appear IsA perform",
        "data_id": 567
    },
    {
        "id": "task1510-699789e95ee344a7b4589a2dff09e77e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad can be used as the opposite of superior\n [OUT] ",
        "output": "bad Antonym superior",
        "data_id": 568
    },
    {
        "id": "task1510-d13835ff77fb4459bdd95fafac5dc802",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by sweet\n [OUT] ",
        "output": "apple HasProperty sweet",
        "data_id": 569
    },
    {
        "id": "task1510-cbf8603d63fd45ba8d956294b14a23c5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atmosphere is part of sky\n [OUT] ",
        "output": "atmosphere PartOf sky",
        "data_id": 570
    },
    {
        "id": "task1510-5337bbdce5eb45fbb0c217281da29c6f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] asia is part of earth\n [OUT] ",
        "output": "asia PartOf earth",
        "data_id": 571
    },
    {
        "id": "task1510-102507485f964b27990bf844cb1e4dc7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bull can be used with the same meaning of male\n [OUT] ",
        "output": "bull Synonym male",
        "data_id": 572
    },
    {
        "id": "task1510-38b32edd4ed5488d9de124cd088a1ca9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is made of aluminium\n [OUT] ",
        "output": "bowl MadeOf aluminium",
        "data_id": 573
    },
    {
        "id": "task1510-eafdc49aec184ba1acca88823f472a19",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] airplane can be characterized by fun\n [OUT] ",
        "output": "airplane HasProperty fun",
        "data_id": 574
    },
    {
        "id": "task1510-ff618549791c49c39c82b9a7cfd91532",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alabama is a kind of place\n [OUT] ",
        "output": "alabama IsA place",
        "data_id": 575
    },
    {
        "id": "task1510-13289ce99b694f07a0daed8d696667cf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be used with the same meaning of assemble\n [OUT] ",
        "output": "build Synonym assemble",
        "data_id": 576
    },
    {
        "id": "task1510-3e4fa8716915440ea141f9466008a49d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aluminum is a kind of gray\n [OUT] ",
        "output": "aluminum IsA gray",
        "data_id": 577
    },
    {
        "id": "task1510-fd8421852bbf4b088153a0dcff1c5354",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air is made of gas\n [OUT] ",
        "output": "air MadeOf gas",
        "data_id": 578
    },
    {
        "id": "task1510-c906e5b9b0db4ef5b716cff977f3d8b9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] author is a kind of person\n [OUT] ",
        "output": "author IsA person",
        "data_id": 579
    },
    {
        "id": "task1510-8afb4d0283c3493093122db88a67c06d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] busy can be used as the opposite of idle\n [OUT] ",
        "output": "busy Antonym idle",
        "data_id": 580
    },
    {
        "id": "task1510-7ecf74e07d8a48939c9eca7dc796c028",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] account is a kind of pay\n [OUT] ",
        "output": "account IsA pay",
        "data_id": 581
    },
    {
        "id": "task1510-6e98db58a94347efa0f2d525c09925a8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is made of glass\n [OUT] ",
        "output": "bowl MadeOf glass",
        "data_id": 582
    },
    {
        "id": "task1510-008627a7b33c4f4e9b6f59e08ef79286",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Authority is a kind of book\n [OUT] ",
        "output": "authority IsA book",
        "data_id": 583
    },
    {
        "id": "task1510-7433c7dfe03541f1a88b0408144c711a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bend can be used with the same meaning of bow\n [OUT] ",
        "output": "bend Synonym bow",
        "data_id": 584
    },
    {
        "id": "task1510-62694b8b28fe44faae940afffb243a06",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by fun\n [OUT] ",
        "output": "book HasProperty fun",
        "data_id": 585
    },
    {
        "id": "task1510-5898570585f44281abe27ffc42725bd0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bit is part of drill\n [OUT] ",
        "output": "bit PartOf drill",
        "data_id": 586
    },
    {
        "id": "task1510-e6c38974b52343aa9ecbe767c4aba184",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atom is made of nucleus\n [OUT] ",
        "output": "atom MadeOf nucleus",
        "data_id": 587
    },
    {
        "id": "task1510-bd73dcb88f804fbfb3dfcb0df059cc1b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon can be characterized by hollow\n [OUT] ",
        "output": "balloon HasProperty hollow",
        "data_id": 588
    },
    {
        "id": "task1510-20c80e5c3f6b4aae86747a5050aafc40",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of unbroken\n [OUT] ",
        "output": "break Antonym unbroken",
        "data_id": 589
    },
    {
        "id": "task1510-3cdf9295476240c1934306947eac7f96",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] birthday can be characterized by happy\n [OUT] ",
        "output": "birthday HasProperty happy",
        "data_id": 590
    },
    {
        "id": "task1510-243f6a7857de4850af77aafffee21621",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bag can be used with the same meaning of baggage\n [OUT] ",
        "output": "bag Synonym baggage",
        "data_id": 591
    },
    {
        "id": "task1510-6c4087d9b6184cceaa79d33148e4b90d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body_part is a kind of part\n [OUT] ",
        "output": "body_part IsA part",
        "data_id": 592
    },
    {
        "id": "task1510-5425ff09072d4badb11c028bfb50e0ed",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird is a kind of animal\n [OUT] ",
        "output": "bird IsA animal",
        "data_id": 593
    },
    {
        "id": "task1510-9225d657e59140b18a0339aac2f3846d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom is a kind of place\n [OUT] ",
        "output": "bedroom IsA place",
        "data_id": 594
    },
    {
        "id": "task1510-200ff9509e054184806298a47f57e574",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blood can be characterized by liquid\n [OUT] ",
        "output": "blood HasProperty liquid",
        "data_id": 595
    },
    {
        "id": "task1510-e3107896b4df4693a33ddcb11d417ddc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belt can be used with the same meaning of circle\n [OUT] ",
        "output": "belt Synonym circle",
        "data_id": 596
    },
    {
        "id": "task1510-c441bf767046404b9f1a3100e2855db2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aeroplane can have or can contain seat\n [OUT] ",
        "output": "aeroplane HasA seat",
        "data_id": 597
    },
    {
        "id": "task1510-2362c06122cb40ae8357185364bf5cc5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can have or can contain oxygen\n [OUT] ",
        "output": "air HasA oxygen",
        "data_id": 598
    },
    {
        "id": "task1510-b1e7a244ccad4084bd19f41934f7a540",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle is a kind of tool\n [OUT] ",
        "output": "bicycle IsA tool",
        "data_id": 599
    },
    {
        "id": "task1510-38749c8b4d2b4cf7b125f7d9433c9112",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brain is part of body\n [OUT] ",
        "output": "brain PartOf body",
        "data_id": 600
    },
    {
        "id": "task1510-a0b12a33bf2f450998c78ab5cfbae85f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act can be used as the opposite of nothing\n [OUT] ",
        "output": "act Antonym nothing",
        "data_id": 601
    },
    {
        "id": "task1510-f8ea0ea634254343ba6382ebfc86a458",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aeroplane can be characterized by fly\n [OUT] ",
        "output": "aeroplane HasProperty fly",
        "data_id": 602
    },
    {
        "id": "task1510-488ccd2217e94649b5908648015ddafa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bull can be characterized by male\n [OUT] ",
        "output": "bull HasProperty male",
        "data_id": 603
    },
    {
        "id": "task1510-451246cfc8734caca80b9d53b4854c3e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beach can be characterized by white\n [OUT] ",
        "output": "beach HasProperty white",
        "data_id": 604
    },
    {
        "id": "task1510-960ca44120e4442ab5bd401a54da7a51",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] author is a kind of write\n [OUT] ",
        "output": "author IsA write",
        "data_id": 605
    },
    {
        "id": "task1510-8c4c020328d54b4ead6cc17a73fc563e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Alto is a kind of pitch\n [OUT] ",
        "output": "alto IsA pitch",
        "data_id": 606
    },
    {
        "id": "task1510-f8a7807dba3741b88ad382bee7df12c1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brain is part of person\n [OUT] ",
        "output": "brain PartOf person",
        "data_id": 607
    },
    {
        "id": "task1510-32f1a36f11e243f1971d7f5d71c597fe",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of create\n [OUT] ",
        "output": "break Antonym create",
        "data_id": 608
    },
    {
        "id": "task1510-8303bd11a21e4e169f0cbca7fdccaef6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arm is part of human\n [OUT] ",
        "output": "arm PartOf human",
        "data_id": 609
    },
    {
        "id": "task1510-ee6ca301683a4ae98a813e1473458978",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bitter can be used as the opposite of sweet\n [OUT] ",
        "output": "bitter Antonym sweet",
        "data_id": 610
    },
    {
        "id": "task1510-f3625eab6a03485f84008d396e94a8a4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by alive\n [OUT] ",
        "output": "apple HasProperty alive",
        "data_id": 611
    },
    {
        "id": "task1510-10852836b6274071a43edfb3cc4d1534",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] article is part of document\n [OUT] ",
        "output": "article PartOf document",
        "data_id": 612
    },
    {
        "id": "task1510-19ec1293b06148088bb5fd8361cde563",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brass_instrument is part of band\n [OUT] ",
        "output": "brass_instrument PartOf band",
        "data_id": 613
    },
    {
        "id": "task1510-3adbd9de82a4444db9d25d06bb81a12b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin can be used as the opposite of end\n [OUT] ",
        "output": "begin Antonym end",
        "data_id": 614
    },
    {
        "id": "task1510-22e6eb5c2e2341e59c062a3ca077068e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] big can be used as the opposite of little\n [OUT] ",
        "output": "big Antonym little",
        "data_id": 615
    },
    {
        "id": "task1510-774ffa04b3824d10bff35ebb5c62e31e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy can have or can contain penis\n [OUT] ",
        "output": "boy HasA penis",
        "data_id": 616
    },
    {
        "id": "task1510-fcb402d8bb21419ba93cdfc8a7aa5ed9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bus is a kind of place\n [OUT] ",
        "output": "bus IsA place",
        "data_id": 617
    },
    {
        "id": "task1510-a2bdd2654e7940509520f31ba09094de",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] age can be used as the opposite of young\n [OUT] ",
        "output": "age Antonym young",
        "data_id": 618
    },
    {
        "id": "task1510-fef539fb0b694ec5be678c370093c588",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] actor is a kind of person\n [OUT] ",
        "output": "actor IsA person",
        "data_id": 619
    },
    {
        "id": "task1510-c2ec2cf5b8964909ab81081ec3caef8b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by stupid\n [OUT] ",
        "output": "bird HasProperty stupid",
        "data_id": 620
    },
    {
        "id": "task1510-a6da95e0dcea49428104b931c1e8dc76",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bin can be used with the same meaning of toss\n [OUT] ",
        "output": "bin Synonym toss",
        "data_id": 621
    },
    {
        "id": "task1510-705cda507cae4868a9df55680acadeb8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boyfriend can be used with the same meaning of male\n [OUT] ",
        "output": "boyfriend Synonym male",
        "data_id": 622
    },
    {
        "id": "task1510-dd16910eac2c4a8a9dbb2d38416818d7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bike can be used with the same meaning of motorcycle\n [OUT] ",
        "output": "bike Synonym motorcycle",
        "data_id": 623
    },
    {
        "id": "task1510-9a275437206b4c4d903dcb61d45ce921",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alcohol can be characterized by fun\n [OUT] ",
        "output": "alcohol HasProperty fun",
        "data_id": 624
    },
    {
        "id": "task1510-e5be22398fce4125bc222284aeba08d4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] base can be used with the same meaning of bad\n [OUT] ",
        "output": "base Synonym bad",
        "data_id": 625
    },
    {
        "id": "task1510-a7ac739efbbf4a1d84206cd58dfabd2a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arithmetic can be used with the same meaning of math\n [OUT] ",
        "output": "arithmetic Synonym math",
        "data_id": 626
    },
    {
        "id": "task1510-8ab04f568a7142eab7be149c33692d2d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt can have or can contain thread\n [OUT] ",
        "output": "bolt HasA thread",
        "data_id": 627
    },
    {
        "id": "task1510-918e84da4c0646aabbae4a488439f56a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be used as the opposite of fish\n [OUT] ",
        "output": "bird Antonym fish",
        "data_id": 628
    },
    {
        "id": "task1510-cc8603697ae4439698bfb95d4211d2ba",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain word\n [OUT] ",
        "output": "book HasA word",
        "data_id": 629
    },
    {
        "id": "task1510-b15afac0d1ed4721aae34ea84383e292",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] antique can be characterized by valuable\n [OUT] ",
        "output": "antique HasProperty valuable",
        "data_id": 630
    },
    {
        "id": "task1510-44337e6a8c124bd9b83e477158f28aa0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affection is a kind of like\n [OUT] ",
        "output": "affection IsA like",
        "data_id": 631
    },
    {
        "id": "task1510-00110299c1e2476d8d8a82e8d4a4d46a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom is part of dwell\n [OUT] ",
        "output": "bedroom PartOf dwell",
        "data_id": 632
    },
    {
        "id": "task1510-3402c03393b64df1bbb6c45006733964",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread can be used as the opposite of butter\n [OUT] ",
        "output": "bread Antonym butter",
        "data_id": 633
    },
    {
        "id": "task1510-77a4edc93ebd4e6e8f8ab79c80cf8832",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bounce is a kind of jump\n [OUT] ",
        "output": "bounce IsA jump",
        "data_id": 634
    },
    {
        "id": "task1510-1fc409c10fb043f497d36921ce80d475",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boredom can be characterized by uncomfortable\n [OUT] ",
        "output": "boredom HasProperty uncomfortable",
        "data_id": 635
    },
    {
        "id": "task1510-a45b80bf9e8b49afb217186656f187fb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can have or can contain bed\n [OUT] ",
        "output": "bedroom HasA bed",
        "data_id": 636
    },
    {
        "id": "task1510-8895797a3c684aac95cc9546e969b53c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beat is true then also win is true\n [OUT] ",
        "output": "beat Entails win",
        "data_id": 637
    },
    {
        "id": "task1510-ef2771474c7347e58f363d7df5599be6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy is a kind of child\n [OUT] ",
        "output": "boy IsA child",
        "data_id": 638
    },
    {
        "id": "task1510-06678dbf9eee40de99b51abd7cacfbcc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used as the opposite of vacuum\n [OUT] ",
        "output": "blow Antonym vacuum",
        "data_id": 639
    },
    {
        "id": "task1510-4ed6ad13b0ea428eabfb0df4828b5ec5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adult is a kind of animal\n [OUT] ",
        "output": "adult IsA animal",
        "data_id": 640
    },
    {
        "id": "task1510-54e024d1b5454149bc0c29e305323e5c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by happy\n [OUT] ",
        "output": "baby HasProperty happy",
        "data_id": 641
    },
    {
        "id": "task1510-bfb9c419d46c487f8604836dc91dd65f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] board is a kind of surface\n [OUT] ",
        "output": "board IsA surface",
        "data_id": 642
    },
    {
        "id": "task1510-7a0d58028344473a9e9467584adf4f8e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bench is part of court\n [OUT] ",
        "output": "bench PartOf court",
        "data_id": 643
    },
    {
        "id": "task1510-17f39de891574d4395828a72fec07650",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bin can be used with the same meaning of trash\n [OUT] ",
        "output": "bin Synonym trash",
        "data_id": 644
    },
    {
        "id": "task1510-af3b73f411434ef9a301253a9b52e023",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box is a kind of hit\n [OUT] ",
        "output": "box IsA hit",
        "data_id": 645
    },
    {
        "id": "task1510-b38009a72b9d4305bb1e2fdfb154c7c7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can have or can contain seed\n [OUT] ",
        "output": "apple HasA seed",
        "data_id": 646
    },
    {
        "id": "task1510-a2256d8f884a4857974edf864bef0190",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] australia is a kind of place\n [OUT] ",
        "output": "australia IsA place",
        "data_id": 647
    },
    {
        "id": "task1510-0dfc092f62534aaa8d8216d4ed187920",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boil can be used with the same meaning of bake\n [OUT] ",
        "output": "boil Synonym bake",
        "data_id": 648
    },
    {
        "id": "task1510-cbf0b40ff1fe41f383d30f2cb7408431",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger can be used as the opposite of love\n [OUT] ",
        "output": "anger Antonym love",
        "data_id": 649
    },
    {
        "id": "task1510-dd935a03c00641d39b5087840b9ac673",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be characterized by comfortable\n [OUT] ",
        "output": "bed HasProperty comfortable",
        "data_id": 650
    },
    {
        "id": "task1510-e38b5ea6875f494a981d6f8a3c823279",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bias can be used with the same meaning of prejudice\n [OUT] ",
        "output": "bias Synonym prejudice",
        "data_id": 651
    },
    {
        "id": "task1510-ecd0b3b0b04a4449b96882a753bc44f6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break is a kind of separation\n [OUT] ",
        "output": "break IsA separation",
        "data_id": 652
    },
    {
        "id": "task1510-b387a4321b624e8dad613467391ea7c5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atom is made of proton\n [OUT] ",
        "output": "atom MadeOf proton",
        "data_id": 653
    },
    {
        "id": "task1510-0e45cc255fc4473c854fa8615bcc9c70",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] be is a kind of state\n [OUT] ",
        "output": "be IsA state",
        "data_id": 654
    },
    {
        "id": "task1510-fcdd0fd551cb4443b92bd773279c3987",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] button is made of plastic\n [OUT] ",
        "output": "button MadeOf plastic",
        "data_id": 655
    },
    {
        "id": "task1510-87b658bfaa064cb8956969ec0b622e15",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bar is a kind of support\n [OUT] ",
        "output": "bar IsA support",
        "data_id": 656
    },
    {
        "id": "task1510-aafc6fed736a4b9e9c289457b3496e77",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] accident can be used with the same meaning of event\n [OUT] ",
        "output": "accident Synonym event",
        "data_id": 657
    },
    {
        "id": "task1510-956ce8845dc04b24a539492023bd3ff0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of hold\n [OUT] ",
        "output": "break Antonym hold",
        "data_id": 658
    },
    {
        "id": "task1510-04124dc8bff04dcca4c033f8ca915901",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be used as the opposite of plant\n [OUT] ",
        "output": "animal Antonym plant",
        "data_id": 659
    },
    {
        "id": "task1510-b6267603cb2943b8815009c69e51b99d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt is part of door\n [OUT] ",
        "output": "bolt PartOf door",
        "data_id": 660
    },
    {
        "id": "task1510-4c8cfe089e094d3daf959745e4dd6c86",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brass is a kind of wind_instrument\n [OUT] ",
        "output": "brass IsA wind_instrument",
        "data_id": 661
    },
    {
        "id": "task1510-09559755bdf047f5820b98b36311ee5f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be used as the opposite of orange\n [OUT] ",
        "output": "apple Antonym orange",
        "data_id": 662
    },
    {
        "id": "task1510-4d661d433a0c4cda8ab86421cd5b5401",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beautiful can be used as the opposite of plain\n [OUT] ",
        "output": "beautiful Antonym plain",
        "data_id": 663
    },
    {
        "id": "task1510-718d82f144fd49d6852c6f483021975b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boil can be used as the opposite of ice\n [OUT] ",
        "output": "boil Antonym ice",
        "data_id": 664
    },
    {
        "id": "task1510-022916719d374af7bb145ada2a9a56c2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used as the opposite of movie\n [OUT] ",
        "output": "book Antonym movie",
        "data_id": 665
    },
    {
        "id": "task1510-287e76683d86437faaec835ee56a2d5a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain baby\n [OUT] ",
        "output": "animal HasA baby",
        "data_id": 666
    },
    {
        "id": "task1510-21877f09c4374c578d0eec9aa7515b12",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arm can be used as the opposite of leg\n [OUT] ",
        "output": "arm Antonym leg",
        "data_id": 667
    },
    {
        "id": "task1510-eedb3d077181449f83c926c597d5df76",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butter can be characterized by soft\n [OUT] ",
        "output": "butter HasProperty soft",
        "data_id": 668
    },
    {
        "id": "task1510-46a5b8304f2c44df939af9e167aa4e04",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act is a kind of drama\n [OUT] ",
        "output": "act IsA drama",
        "data_id": 669
    },
    {
        "id": "task1510-1ff8d686d8744a2892ddb8014879b9f7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belt can be used with the same meaning of speed\n [OUT] ",
        "output": "belt Synonym speed",
        "data_id": 670
    },
    {
        "id": "task1510-42b8a68d19bc4c6f9842311d669eeca9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bloom can be used as the opposite of die\n [OUT] ",
        "output": "bloom Antonym die",
        "data_id": 671
    },
    {
        "id": "task1510-df39e7afea664acd9b16cc1a8d5b0466",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] address is true then also speak is true\n [OUT] ",
        "output": "address Entails speak",
        "data_id": 672
    },
    {
        "id": "task1510-38d2e2405a744d14a09f5a8a92d44f21",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] button is part of cell_phone\n [OUT] ",
        "output": "button PartOf cell_phone",
        "data_id": 673
    },
    {
        "id": "task1510-228a2a576cb543dd92b1c5e4f679280a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benefit can be used as the opposite of punishment\n [OUT] ",
        "output": "benefit Antonym punishment",
        "data_id": 674
    },
    {
        "id": "task1510-86abb8b06518479896dfb7d9c77434b4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can have or can contain sink\n [OUT] ",
        "output": "bathroom HasA sink",
        "data_id": 675
    },
    {
        "id": "task1510-4860f1d5c9e047aab55b2e65d1046f68",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affair can be used as the opposite of spouse\n [OUT] ",
        "output": "affair Antonym spouse",
        "data_id": 676
    },
    {
        "id": "task1510-1e647dd9e4754549a84c0409a10cbeac",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Arrange is a kind of agree\n [OUT] ",
        "output": "arrange IsA agree",
        "data_id": 677
    },
    {
        "id": "task1510-003504808b2646e2884622ce3660bc16",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is a kind of link\n [OUT] ",
        "output": "bridge IsA link",
        "data_id": 678
    },
    {
        "id": "task1510-6d5f196159dc4de98f1f0a392e4e6854",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boil is a kind of change\n [OUT] ",
        "output": "boil IsA change",
        "data_id": 679
    },
    {
        "id": "task1510-2d2853d7993149a1a4a27615d990f99f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] answer can be used as the opposite of unknown\n [OUT] ",
        "output": "answer Antonym unknown",
        "data_id": 680
    },
    {
        "id": "task1510-41b6238162644378b7d04da5f5ae8d25",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can be used with the same meaning of computer\n [OUT] ",
        "output": "box Synonym computer",
        "data_id": 681
    },
    {
        "id": "task1510-4af9309264b94ecdb1cf6c29a15b038b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america can have or can contain president\n [OUT] ",
        "output": "america HasA president",
        "data_id": 682
    },
    {
        "id": "task1510-5f5f7fb8d369452db3a796b8d54d94c6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bus can be used with the same meaning of coach\n [OUT] ",
        "output": "bus Synonym coach",
        "data_id": 683
    },
    {
        "id": "task1510-559964b0a1a24dd7a6e8276f973ecc79",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl can have or can contain liquid\n [OUT] ",
        "output": "bowl HasA liquid",
        "data_id": 684
    },
    {
        "id": "task1510-b3a93d141b2e477ca5ab4848d9595b2c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can be used as the opposite of spirit\n [OUT] ",
        "output": "body Antonym spirit",
        "data_id": 685
    },
    {
        "id": "task1510-f09d5fd8dbc64e7ab6a56e28da0a9e2d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring can be used as the opposite of leave_behind\n [OUT] ",
        "output": "bring Antonym leave_behind",
        "data_id": 686
    },
    {
        "id": "task1510-0a495e70b2db420491cfae05c03d8192",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] army is part of war\n [OUT] ",
        "output": "army PartOf war",
        "data_id": 687
    },
    {
        "id": "task1510-41aad0f2c643432ba468e796b3924d94",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] airplane can have or can contain wheel\n [OUT] ",
        "output": "airplane HasA wheel",
        "data_id": 688
    },
    {
        "id": "task1510-9aac667b37a74277bf2fecf508ffac02",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bacon is made of pig\n [OUT] ",
        "output": "bacon MadeOf pig",
        "data_id": 689
    },
    {
        "id": "task1510-7371d95a240f40fd8498af4a09399274",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] base can be used as the opposite of top\n [OUT] ",
        "output": "base Antonym top",
        "data_id": 690
    },
    {
        "id": "task1510-427375acffb740e39b5d3a878dc6b0fa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] advance can be used as the opposite of late\n [OUT] ",
        "output": "advance Antonym late",
        "data_id": 691
    },
    {
        "id": "task1510-c37a4271a9494dedbbf18c622e80d5ca",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be used as the opposite of water\n [OUT] ",
        "output": "air Antonym water",
        "data_id": 692
    },
    {
        "id": "task1510-dc6eaf4e3b62486280b7ae78d7cfeeb0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blanket is made of fabric\n [OUT] ",
        "output": "blanket MadeOf fabric",
        "data_id": 693
    },
    {
        "id": "task1510-a70c22be37464820a8837b1f30d1c4ce",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used as the opposite of breathe\n [OUT] ",
        "output": "blow Antonym breathe",
        "data_id": 694
    },
    {
        "id": "task1510-83b971d5db984f0bb223a871cbb896fa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] board can be used with the same meaning of table\n [OUT] ",
        "output": "board Synonym table",
        "data_id": 695
    },
    {
        "id": "task1510-7235cb6ab5c5435ca27e1d5fb5047ca7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Adore is a kind of love\n [OUT] ",
        "output": "adore IsA love",
        "data_id": 696
    },
    {
        "id": "task1510-bd43193535e44e88aab125840fa7f845",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beam can be used with the same meaning of smile\n [OUT] ",
        "output": "beam Synonym smile",
        "data_id": 697
    },
    {
        "id": "task1510-eb06e75ab6884b81a61c633034bea3e5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baseball is a kind of action\n [OUT] ",
        "output": "baseball IsA action",
        "data_id": 698
    },
    {
        "id": "task1510-16652f6a6a1642d29365ab0734dac8b8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used with the same meaning of volume\n [OUT] ",
        "output": "book Synonym volume",
        "data_id": 699
    },
    {
        "id": "task1510-522f24f79eba45af9bfc8aea3b8df643",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance can be used as the opposite of prejudice\n [OUT] ",
        "output": "balance Antonym prejudice",
        "data_id": 700
    },
    {
        "id": "task1510-c08a70f2085a477382ddff6b30b94114",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bat is a kind of club\n [OUT] ",
        "output": "bat IsA club",
        "data_id": 701
    },
    {
        "id": "task1510-21d9247a61ae49a3b840a4eba2d6a12b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used with the same meaning of strike\n [OUT] ",
        "output": "blow Synonym strike",
        "data_id": 702
    },
    {
        "id": "task1510-e88786a6c47f4705b2334f56f123a426",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build is a kind of create\n [OUT] ",
        "output": "build IsA create",
        "data_id": 703
    },
    {
        "id": "task1510-4e9474b98c87417e9e2aacc77c35b503",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be characterized by free\n [OUT] ",
        "output": "air HasProperty free",
        "data_id": 704
    },
    {
        "id": "task1510-0477f548da674eab9d3152bd0a60f1dc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment can be characterized by red\n [OUT] ",
        "output": "apartment HasProperty red",
        "data_id": 705
    },
    {
        "id": "task1510-1b9147f6bcdd4d30817e2cc74b6c42cb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] base is part of vessel\n [OUT] ",
        "output": "base PartOf vessel",
        "data_id": 706
    },
    {
        "id": "task1510-bcc1c1c1841f42c7b450c4bdb0de9446",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body is part of automobile\n [OUT] ",
        "output": "body PartOf automobile",
        "data_id": 707
    },
    {
        "id": "task1510-ae749de5ca404eef981e819695864e0c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] armor can be used as the opposite of clothe\n [OUT] ",
        "output": "armor Antonym clothe",
        "data_id": 708
    },
    {
        "id": "task1510-bf902c53ce45426c862a68faf402874f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bear can have or can contain fur\n [OUT] ",
        "output": "bear HasA fur",
        "data_id": 709
    },
    {
        "id": "task1510-81059cddba924f17850c5eb84dfee348",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bill is a kind of money\n [OUT] ",
        "output": "bill IsA money",
        "data_id": 710
    },
    {
        "id": "task1510-c373a746fd0a4a08abc2d0bc58c3c931",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bike can have or can contain wheel\n [OUT] ",
        "output": "bike HasA wheel",
        "data_id": 711
    },
    {
        "id": "task1510-bc08adf025e14fc9975493c4f32eb8e8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aluminium can be used as the opposite of tin\n [OUT] ",
        "output": "aluminium Antonym tin",
        "data_id": 712
    },
    {
        "id": "task1510-d416443fbdda41789499e337a76a3b94",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used with the same meaning of note\n [OUT] ",
        "output": "book Synonym note",
        "data_id": 713
    },
    {
        "id": "task1510-aef99ac8f45643a2837d6154852343bc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can have or can contain core\n [OUT] ",
        "output": "apple HasA core",
        "data_id": 714
    },
    {
        "id": "task1510-08395be623544a26af724edf7892fd5d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain write\n [OUT] ",
        "output": "book HasA write",
        "data_id": 715
    },
    {
        "id": "task1510-efd3114783aa4eefbc69e06b1c01a692",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue is a kind of color\n [OUT] ",
        "output": "blue IsA color",
        "data_id": 716
    },
    {
        "id": "task1510-dcf9c80c7c6043e4bd6f178d882f187c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] atmosphere can be used with the same meaning of feel\n [OUT] ",
        "output": "atmosphere Synonym feel",
        "data_id": 717
    },
    {
        "id": "task1510-f3b8f0cb212740308496f6394b176fdf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arm is part of body\n [OUT] ",
        "output": "arm PartOf body",
        "data_id": 718
    },
    {
        "id": "task1510-cc9c0f3572f345a1b0447f7e037ecbae",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beef is a kind of meet\n [OUT] ",
        "output": "beef IsA meet",
        "data_id": 719
    },
    {
        "id": "task1510-001d7387268f44b890c701e859d4987c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bomb can be characterized by bad\n [OUT] ",
        "output": "bomb HasProperty bad",
        "data_id": 720
    },
    {
        "id": "task1510-765ded28e94948f2bfadd8fb5659784a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby is part of family\n [OUT] ",
        "output": "baby PartOf family",
        "data_id": 721
    },
    {
        "id": "task1510-50e6e1edab234bad89aa2c44e944248a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brave can be used as the opposite of weak\n [OUT] ",
        "output": "brave Antonym weak",
        "data_id": 722
    },
    {
        "id": "task1510-c40b1dab0e9541d29ba5d408a59627c2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure can be used as the opposite of lazy\n [OUT] ",
        "output": "adventure Antonym lazy",
        "data_id": 723
    },
    {
        "id": "task1510-c25dd1f9a4af4fb8a1e8abe55e448afd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread can be characterized by eat\n [OUT] ",
        "output": "bread HasProperty eat",
        "data_id": 724
    },
    {
        "id": "task1510-d9b1c7a124464b71913d4ede6b9aa029",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] advance can be used as the opposite of back\n [OUT] ",
        "output": "advance Antonym back",
        "data_id": 725
    },
    {
        "id": "task1510-5edfaa60446f4cceabcab7943f810eb8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be used as the opposite of illuminate\n [OUT] ",
        "output": "black Antonym illuminate",
        "data_id": 726
    },
    {
        "id": "task1510-f8dc66ac7bf14530998433b075418496",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt is a kind of lock\n [OUT] ",
        "output": "bolt IsA lock",
        "data_id": 727
    },
    {
        "id": "task1510-eb9c96ec4a8c45259d9ed0bf37327545",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure is a kind of action\n [OUT] ",
        "output": "adventure IsA action",
        "data_id": 728
    },
    {
        "id": "task1510-4c047bc248134b3db142f86683543795",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] account can be used with the same meaning of statement\n [OUT] ",
        "output": "account Synonym statement",
        "data_id": 729
    },
    {
        "id": "task1510-13d6a28d34c54b5ab828a9b8f368cd90",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bus can have or can contain window\n [OUT] ",
        "output": "bus HasA window",
        "data_id": 730
    },
    {
        "id": "task1510-9a725e77eff84b75ac48e8e51d28538d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be used as the opposite of flesh\n [OUT] ",
        "output": "bone Antonym flesh",
        "data_id": 731
    },
    {
        "id": "task1510-319cfd00cf0647a2a9ec6b4187428a17",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arch is a kind of open\n [OUT] ",
        "output": "arch IsA open",
        "data_id": 732
    },
    {
        "id": "task1510-af033c72e0f64bf68982c4b2de389b9f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benefit is a kind of payment\n [OUT] ",
        "output": "benefit IsA payment",
        "data_id": 733
    },
    {
        "id": "task1510-5d73f6f98f5d48dd800d5729b655a6a5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by beautiful\n [OUT] ",
        "output": "bird HasProperty beautiful",
        "data_id": 734
    },
    {
        "id": "task1510-3ce4abfefcbd42cbb59283f35366e1af",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of battle\n [OUT] ",
        "output": "action Synonym battle",
        "data_id": 735
    },
    {
        "id": "task1510-cdc1e2b31da1491eaf5d229261455591",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bacon can be used with the same meaning of ham\n [OUT] ",
        "output": "bacon Synonym ham",
        "data_id": 736
    },
    {
        "id": "task1510-39a8dd0c0a1943a7b94ef09a97c83489",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can be used with the same meaning of blow\n [OUT] ",
        "output": "box Synonym blow",
        "data_id": 737
    },
    {
        "id": "task1510-c36621d8febf47cd8bd0f1c4cd577bde",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] approach is a kind of movement\n [OUT] ",
        "output": "approach IsA movement",
        "data_id": 738
    },
    {
        "id": "task1510-6810e162620144309791918a83584632",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] army is made of soldier\n [OUT] ",
        "output": "army MadeOf soldier",
        "data_id": 739
    },
    {
        "id": "task1510-dee853ce8efb491eba1958b7d010e70f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alcohol can be used as the opposite of water\n [OUT] ",
        "output": "alcohol Antonym water",
        "data_id": 740
    },
    {
        "id": "task1510-341b924e42424259a8498c14cc53c7f0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] battle can be used with the same meaning of conflict\n [OUT] ",
        "output": "battle Synonym conflict",
        "data_id": 741
    },
    {
        "id": "task1510-85525e9209f14869bc16bce6ea1a2c8b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beer can be characterized by good\n [OUT] ",
        "output": "beer HasProperty good",
        "data_id": 742
    },
    {
        "id": "task1510-156d0f0f367b4e39af9644acb64f159f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathroom can be characterized by dark\n [OUT] ",
        "output": "bathroom HasProperty dark",
        "data_id": 743
    },
    {
        "id": "task1510-2021edf20d67490f8783e5c019d7a511",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can be used with the same meaning of tv\n [OUT] ",
        "output": "box Synonym tv",
        "data_id": 744
    },
    {
        "id": "task1510-7805aecd689041b4986236b157cbfea7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] business can be used as the opposite of personal\n [OUT] ",
        "output": "business Antonym personal",
        "data_id": 745
    },
    {
        "id": "task1510-8a41976e0e7245c7b1064c38b872a1ff",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] board can be characterized by flat\n [OUT] ",
        "output": "board HasProperty flat",
        "data_id": 746
    },
    {
        "id": "task1510-3f63cc1bf1df496c9c0e2c08b4384410",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy can be used as the opposite of sister\n [OUT] ",
        "output": "boy Antonym sister",
        "data_id": 747
    },
    {
        "id": "task1510-583485cfce3a4dd6a388bef3008fcfeb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by fragile\n [OUT] ",
        "output": "baby HasProperty fragile",
        "data_id": 748
    },
    {
        "id": "task1510-422a216b816c4afb98aadbcc1f93e054",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bomb is part of war\n [OUT] ",
        "output": "bomb PartOf war",
        "data_id": 749
    },
    {
        "id": "task1510-f636b208349b4d46b49d397bf9a28d78",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] appear can be used with the same meaning of look\n [OUT] ",
        "output": "appear Synonym look",
        "data_id": 750
    },
    {
        "id": "task1510-18a8dd6ba31c4e4987a000359fa27dbc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can have or can contain bone\n [OUT] ",
        "output": "body HasA bone",
        "data_id": 751
    },
    {
        "id": "task1510-a2fe74b3138f47f0ac335fd4628b5efc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be characterized by ugly\n [OUT] ",
        "output": "build HasProperty ugly",
        "data_id": 752
    },
    {
        "id": "task1510-85989a65b06e4426a3210bc2f0018a5f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boredom can be used as the opposite of excitement\n [OUT] ",
        "output": "boredom Antonym excitement",
        "data_id": 753
    },
    {
        "id": "task1510-959031d13cb24589bca6d414bf9c8579",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] branch is a kind of division\n [OUT] ",
        "output": "branch IsA division",
        "data_id": 754
    },
    {
        "id": "task1510-82e94d90527b4c79b23012da75dd19ca",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball can be characterized by sport\n [OUT] ",
        "output": "basketball HasProperty sport",
        "data_id": 755
    },
    {
        "id": "task1510-a1ef86aad75a4cbf814782cf1cad688f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird is a kind of meat\n [OUT] ",
        "output": "bird IsA meat",
        "data_id": 756
    },
    {
        "id": "task1510-bb3a3a63581b4c1d8619565926c6dee3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin is a kind of part\n [OUT] ",
        "output": "begin IsA part",
        "data_id": 757
    },
    {
        "id": "task1510-8069fe9c195b4433a75775b39bb7da75",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brain is a kind of head\n [OUT] ",
        "output": "brain IsA head",
        "data_id": 758
    },
    {
        "id": "task1510-b3842bae31564d72aace8c6ae99d5ebd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be used as the opposite of vegetable\n [OUT] ",
        "output": "animal Antonym vegetable",
        "data_id": 759
    },
    {
        "id": "task1510-d4d0bd1601aa4318abfe5b071622548b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benefit can be characterized by important\n [OUT] ",
        "output": "benefit HasProperty important",
        "data_id": 760
    },
    {
        "id": "task1510-96796937806949d1bfec69bdd27c8ad9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beat is a kind of move\n [OUT] ",
        "output": "beat IsA move",
        "data_id": 761
    },
    {
        "id": "task1510-190897a6032f43958a8f651c83fa8502",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used with the same meaning of wind\n [OUT] ",
        "output": "blow Synonym wind",
        "data_id": 762
    },
    {
        "id": "task1510-62a6b400b925499fb2e1e35cb3e3904a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] alley can be used with the same meaning of walk\n [OUT] ",
        "output": "alley Synonym walk",
        "data_id": 763
    },
    {
        "id": "task1510-65c54b81bc05408687bf65d25a4e6c67",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] all can be used as the opposite of nothing\n [OUT] ",
        "output": "all Antonym nothing",
        "data_id": 764
    },
    {
        "id": "task1510-328439196ac1424aa18074b55882050e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belief is part of faith\n [OUT] ",
        "output": "belief PartOf faith",
        "data_id": 765
    },
    {
        "id": "task1510-b7152f344f7a4417923c9a61b43edf5c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure can be used as the opposite of nothing\n [OUT] ",
        "output": "adventure Antonym nothing",
        "data_id": 766
    },
    {
        "id": "task1510-65d23a46ad9543c29920f3e93a2beccd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be characterized by big\n [OUT] ",
        "output": "bed HasProperty big",
        "data_id": 767
    },
    {
        "id": "task1510-b43491901bd84d0cb936956b890345c9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used as the opposite of film\n [OUT] ",
        "output": "book Antonym film",
        "data_id": 768
    },
    {
        "id": "task1510-2ed7c3f51c454c188a5d21fb8632161f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] age is part of life\n [OUT] ",
        "output": "age PartOf life",
        "data_id": 769
    },
    {
        "id": "task1510-7a32788f88314a179cc3075b0a526929",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bug is a kind of animal\n [OUT] ",
        "output": "bug IsA animal",
        "data_id": 770
    },
    {
        "id": "task1510-662de54083174cbbb723d03ae995bbe7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] branch can be used as the opposite of trunk\n [OUT] ",
        "output": "branch Antonym trunk",
        "data_id": 771
    },
    {
        "id": "task1510-0e167ac2e6d849bf9d2d2e09e7f36194",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] armchair can be characterized by comfortable\n [OUT] ",
        "output": "armchair HasProperty comfortable",
        "data_id": 772
    },
    {
        "id": "task1510-5bae9592cebc4b4784668011cba15be3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adult is a kind of person\n [OUT] ",
        "output": "adult IsA person",
        "data_id": 773
    },
    {
        "id": "task1510-fe4bab8a15a64912b8df3b991e8fcb3b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arm is part of person\n [OUT] ",
        "output": "arm PartOf person",
        "data_id": 774
    },
    {
        "id": "task1510-66db13987dc142d0a9682126cdc1500c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] awaken is a kind of change\n [OUT] ",
        "output": "awaken IsA change",
        "data_id": 775
    },
    {
        "id": "task1510-ebcd7d5bab4747ee80250a9f82d4fa64",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball is a kind of baseball\n [OUT] ",
        "output": "ball IsA baseball",
        "data_id": 776
    },
    {
        "id": "task1510-a22a656753b94c28bfae7384e300a372",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bow can be used with the same meaning of curve\n [OUT] ",
        "output": "bow Synonym curve",
        "data_id": 777
    },
    {
        "id": "task1510-145a9a51dfb84460be4916753cffdbcd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act is part of performance\n [OUT] ",
        "output": "act PartOf performance",
        "data_id": 778
    },
    {
        "id": "task1510-8172302897eb4ac49c34333bad04a692",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be characterized by fun\n [OUT] ",
        "output": "bed HasProperty fun",
        "data_id": 779
    },
    {
        "id": "task1510-5bbe06671ff541049fa17fc1ca5cc5c0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be used as the opposite of old\n [OUT] ",
        "output": "baby Antonym old",
        "data_id": 780
    },
    {
        "id": "task1510-75922be884414d229c992825c40a87b8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be used with the same meaning of girl\n [OUT] ",
        "output": "bird Synonym girl",
        "data_id": 781
    },
    {
        "id": "task1510-66a671878a8f4615a5f7789886f55df4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] accident can be used as the opposite of plan\n [OUT] ",
        "output": "accident Antonym plan",
        "data_id": 782
    },
    {
        "id": "task1510-2320a367bc70460db05748608daf1ecb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belief can be characterized by important\n [OUT] ",
        "output": "belief HasProperty important",
        "data_id": 783
    },
    {
        "id": "task1510-960db8c67a3f41feb90e7742616fc6f1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belt can be used with the same meaning of pound\n [OUT] ",
        "output": "belt Synonym pound",
        "data_id": 784
    },
    {
        "id": "task1510-28a8654cadf443738e4868c39c1a2596",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be used as the opposite of human\n [OUT] ",
        "output": "animal Antonym human",
        "data_id": 785
    },
    {
        "id": "task1510-c2d24212dd8246d38bc8b9607c7743f4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle can have or can contain liquid\n [OUT] ",
        "output": "bottle HasA liquid",
        "data_id": 786
    },
    {
        "id": "task1510-4c618665b7344937a0bdb4c9ce095d71",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon can have or can contain water\n [OUT] ",
        "output": "balloon HasA water",
        "data_id": 787
    },
    {
        "id": "task1510-7b5f62c0874a412389aa48267361941b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can have or can contain gift\n [OUT] ",
        "output": "box HasA gift",
        "data_id": 788
    },
    {
        "id": "task1510-2ee695dfc750467ab66666735a637f1c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] busy can be used as the opposite of nothing\n [OUT] ",
        "output": "busy Antonym nothing",
        "data_id": 789
    },
    {
        "id": "task1510-be8d5eaa61c7496491d0b0ce81cf010d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break is a kind of change\n [OUT] ",
        "output": "break IsA change",
        "data_id": 790
    },
    {
        "id": "task1510-ab3156ed12d949d8b1b6edffa6618b9e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bottle can be used with the same meaning of courage\n [OUT] ",
        "output": "bottle Synonym courage",
        "data_id": 791
    },
    {
        "id": "task1510-5f8094df50dc48dfb2b6b527839946d7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] cabinet can have or can contain door\n [OUT] ",
        "output": "cabinet HasA door",
        "data_id": 792
    },
    {
        "id": "task1510-609c1526a6114ae3915ab479c388fedb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] author can be used with the same meaning of writer\n [OUT] ",
        "output": "author Synonym writer",
        "data_id": 793
    },
    {
        "id": "task1510-aa7fee854dc64aa4bf9cbdfb2df28724",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bite is a kind of pierce\n [OUT] ",
        "output": "bite IsA pierce",
        "data_id": 794
    },
    {
        "id": "task1510-5937cee4e418451391b1a5254dc058b4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air is made of oxygen\n [OUT] ",
        "output": "air MadeOf oxygen",
        "data_id": 795
    },
    {
        "id": "task1510-83631efdba6845eb9bfd5fc70da2784d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom is a kind of room\n [OUT] ",
        "output": "bedroom IsA room",
        "data_id": 796
    },
    {
        "id": "task1510-cd64a40dd6674090a353db101a5f39b1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animate can be used as the opposite of stationary\n [OUT] ",
        "output": "animate Antonym stationary",
        "data_id": 797
    },
    {
        "id": "task1510-f13d734e70034e56bbf67ae1606d7294",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boot can be used with the same meaning of trunk\n [OUT] ",
        "output": "boot Synonym trunk",
        "data_id": 798
    },
    {
        "id": "task1510-7544d57f68314e53b574ac07db0d95bb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can be used as the opposite of bathroom\n [OUT] ",
        "output": "bedroom Antonym bathroom",
        "data_id": 799
    },
    {
        "id": "task1510-5b59d334013c49a5984057fcb0dade4e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brush is a kind of move\n [OUT] ",
        "output": "brush IsA move",
        "data_id": 800
    },
    {
        "id": "task1510-5fb846b88103408581f16de6cc0980bf",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be used as the opposite of skin\n [OUT] ",
        "output": "bone Antonym skin",
        "data_id": 801
    },
    {
        "id": "task1510-8d6b6836c78d4514bff162612c888bf2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone is part of human\n [OUT] ",
        "output": "bone PartOf human",
        "data_id": 802
    },
    {
        "id": "task1510-b6bcad7810c74b159d8f3a16020cb446",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] accident is a kind of error\n [OUT] ",
        "output": "accident IsA error",
        "data_id": 803
    },
    {
        "id": "task1510-fc0bf87e5b1648daa435da51ac826747",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brick is made of clay\n [OUT] ",
        "output": "brick MadeOf clay",
        "data_id": 804
    },
    {
        "id": "task1510-499f4dbf8e4f4b2487edadaae77a2551",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be characterized by alive\n [OUT] ",
        "output": "animal HasProperty alive",
        "data_id": 805
    },
    {
        "id": "task1510-69e2a021128d4eb2b827281bae5c941d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bath can be used as the opposite of shower\n [OUT] ",
        "output": "bath Antonym shower",
        "data_id": 806
    },
    {
        "id": "task1510-4495269815c74e049a01d7dbce5b4f62",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bug can be characterized by small\n [OUT] ",
        "output": "bug HasProperty small",
        "data_id": 807
    },
    {
        "id": "task1510-2066fdd04345451f81378dc288770303",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] buy is true then also pay is true\n [OUT] ",
        "output": "buy Entails pay",
        "data_id": 808
    },
    {
        "id": "task1510-890f10868d8d470b83f1af4d03d59761",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bull is a kind of cattle\n [OUT] ",
        "output": "bull IsA cattle",
        "data_id": 809
    },
    {
        "id": "task1510-f8a1ce8d929f4f1088963d635f35e10f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blade is part of fan\n [OUT] ",
        "output": "blade PartOf fan",
        "data_id": 810
    },
    {
        "id": "task1510-8cd78f93d8304f66bca7e867f957427b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss can be used as the opposite of employee\n [OUT] ",
        "output": "boss Antonym employee",
        "data_id": 811
    },
    {
        "id": "task1510-5c662695752c4cd79354bcc6c7a804dc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] breast can be used with the same meaning of chest\n [OUT] ",
        "output": "breast Synonym chest",
        "data_id": 812
    },
    {
        "id": "task1510-2ecddfd9dd4649d5aff81de7078552a4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is a kind of collection\n [OUT] ",
        "output": "book IsA collection",
        "data_id": 813
    },
    {
        "id": "task1510-99517be3204c42848311a217649e4d7e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build can be characterized by solid\n [OUT] ",
        "output": "build HasProperty solid",
        "data_id": 814
    },
    {
        "id": "task1510-3307576994394612a00cc4ddc21b0fcc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat is a kind of ride\n [OUT] ",
        "output": "boat IsA ride",
        "data_id": 815
    },
    {
        "id": "task1510-732b319a284f4ba381503bb6e5df73e7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aisle is part of store\n [OUT] ",
        "output": "aisle PartOf store",
        "data_id": 816
    },
    {
        "id": "task1510-86fd3c16a0784420afbe944a0773afde",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone is part of foot\n [OUT] ",
        "output": "bone PartOf foot",
        "data_id": 817
    },
    {
        "id": "task1510-0180f1953d2b48169036e5bcdae4711a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can be used with the same meaning of pack\n [OUT] ",
        "output": "box Synonym pack",
        "data_id": 818
    },
    {
        "id": "task1510-38f04a89d4e64752bbbe34064eacf469",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] act can be used with the same meaning of action\n [OUT] ",
        "output": "act Synonym action",
        "data_id": 819
    },
    {
        "id": "task1510-e5a7ea1611c94adda25b02e262e47dad",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benefit is a kind of good\n [OUT] ",
        "output": "benefit IsA good",
        "data_id": 820
    },
    {
        "id": "task1510-53d0de74b6f240c189d0017b62ca8c53",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] art can be characterized by beautiful\n [OUT] ",
        "output": "art HasProperty beautiful",
        "data_id": 821
    },
    {
        "id": "task1510-7442991a52434b86a1361bda43fb241b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] begin is a kind of point\n [OUT] ",
        "output": "begin IsA point",
        "data_id": 822
    },
    {
        "id": "task1510-06e532b357714a2caea051a68e3f8b35",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beam is a kind of light\n [OUT] ",
        "output": "beam IsA light",
        "data_id": 823
    },
    {
        "id": "task1510-deae414d7b464c9196d743ed62a64da8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn is a kind of destroy\n [OUT] ",
        "output": "burn IsA destroy",
        "data_id": 824
    },
    {
        "id": "task1510-c19155e27af1402f8246184ca9fddaea",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] band can be used with the same meaning of ring\n [OUT] ",
        "output": "band Synonym ring",
        "data_id": 825
    },
    {
        "id": "task1510-484d283bc93f47d7a3ea1fd2d563aa61",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bank can have or can contain coin\n [OUT] ",
        "output": "bank HasA coin",
        "data_id": 826
    },
    {
        "id": "task1510-2c9218834f04451bb87255a95006fd42",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] advance is a kind of move\n [OUT] ",
        "output": "advance IsA move",
        "data_id": 827
    },
    {
        "id": "task1510-d9269a330b5c4b02b26dd1513745391f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be used as the opposite of human\n [OUT] ",
        "output": "bird Antonym human",
        "data_id": 828
    },
    {
        "id": "task1510-fbc13b979efb4ea3950524890e6f49fb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bullet can be used as the opposite of safe\n [OUT] ",
        "output": "bullet Antonym safe",
        "data_id": 829
    },
    {
        "id": "task1510-e6f3f68f7a7f45dda6a5a42397326066",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat can be used with the same meaning of vessel\n [OUT] ",
        "output": "boat Synonym vessel",
        "data_id": 830
    },
    {
        "id": "task1510-bd9103e6a3124edca29f9daf82ec6757",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bow is part of vessel\n [OUT] ",
        "output": "bow PartOf vessel",
        "data_id": 831
    },
    {
        "id": "task1510-ceb6866dde0a46bbb501c0d6ae4ad3f1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn can be used as the opposite of cool\n [OUT] ",
        "output": "burn Antonym cool",
        "data_id": 832
    },
    {
        "id": "task1510-710f2f6411f349dd9b8ea6be72b72598",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bitter can be used as the opposite of tasty\n [OUT] ",
        "output": "bitter Antonym tasty",
        "data_id": 833
    },
    {
        "id": "task1510-d6f753977e484f82851948d64d3fabf1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger can be used as the opposite of happiness\n [OUT] ",
        "output": "anger Antonym happiness",
        "data_id": 834
    },
    {
        "id": "task1510-cd243aa5c165456d9adad03840c3f46f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] airplane can have or can contain wing\n [OUT] ",
        "output": "airplane HasA wing",
        "data_id": 835
    },
    {
        "id": "task1510-5902af5c7d49497081fe89092fa4a665",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] add can be used with the same meaning of join\n [OUT] ",
        "output": "add Synonym join",
        "data_id": 836
    },
    {
        "id": "task1510-8612ab775b4a432f9305daae02f1ad7a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is a kind of paper\n [OUT] ",
        "output": "book IsA paper",
        "data_id": 837
    },
    {
        "id": "task1510-57a4de8758ec4b1d98ca6cf5ab39070c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aid can be used with the same meaning of help\n [OUT] ",
        "output": "aid Synonym help",
        "data_id": 838
    },
    {
        "id": "task1510-ea840ffd6ee7405189086f160935ebea",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bed can be used as the opposite of sofa\n [OUT] ",
        "output": "bed Antonym sofa",
        "data_id": 839
    },
    {
        "id": "task1510-139756b504cc4a6bbfe5a91437106187",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom is part of house\n [OUT] ",
        "output": "bedroom PartOf house",
        "data_id": 840
    },
    {
        "id": "task1510-efa4b2fb6ad84b80bcc2d78c6a85eee7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america can have or can contain beach\n [OUT] ",
        "output": "america HasA beach",
        "data_id": 841
    },
    {
        "id": "task1510-3ecdd67b62ed416ca17c7d7230bb0d04",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of build\n [OUT] ",
        "output": "break Antonym build",
        "data_id": 842
    },
    {
        "id": "task1510-fc3ca4eff77645b9b9feed053c66dcb7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bring can be used as the opposite of take_away\n [OUT] ",
        "output": "bring Antonym take_away",
        "data_id": 843
    },
    {
        "id": "task1510-0e28bd8477014e228b0dd7af31fe54a4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark is part of branch\n [OUT] ",
        "output": "bark PartOf branch",
        "data_id": 844
    },
    {
        "id": "task1510-5b8a588f8d6642f7a10787d8eabc180e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bind can be used with the same meaning of restrict\n [OUT] ",
        "output": "bind Synonym restrict",
        "data_id": 845
    },
    {
        "id": "task1510-8afed3cdf7c14b2f8c563c2b1e0ad653",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bat can have or can contain eye\n [OUT] ",
        "output": "bat HasA eye",
        "data_id": 846
    },
    {
        "id": "task1510-83d235e2468049dd9d4ecfe7d94a8081",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bind can be used with the same meaning of tie\n [OUT] ",
        "output": "bind Synonym tie",
        "data_id": 847
    },
    {
        "id": "task1510-8519464658ba49ea9061b11f17087a70",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain story\n [OUT] ",
        "output": "book HasA story",
        "data_id": 848
    },
    {
        "id": "task1510-120cebc49b244d74a760f968ad061b6e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] artist can be characterized by powerful\n [OUT] ",
        "output": "artist HasProperty powerful",
        "data_id": 849
    },
    {
        "id": "task1510-1406d6490d1747c2b0426693b796c99a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] belt can be used with the same meaning of fasten\n [OUT] ",
        "output": "belt Synonym fasten",
        "data_id": 850
    },
    {
        "id": "task1510-c0e9d35c61504439ab9477a8c7d55ad0",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] busy can be used as the opposite of relax\n [OUT] ",
        "output": "busy Antonym relax",
        "data_id": 851
    },
    {
        "id": "task1510-8fe9f35d69194dc9a2bee8f5e78e3011",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain picture\n [OUT] ",
        "output": "book HasA picture",
        "data_id": 852
    },
    {
        "id": "task1510-5ec96d89a6814fcab92f2bbd9fb56367",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] army is a kind of crowd\n [OUT] ",
        "output": "army IsA crowd",
        "data_id": 853
    },
    {
        "id": "task1510-1fdffda5774c43af81354043945ca843",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] button is part of tv\n [OUT] ",
        "output": "button PartOf tv",
        "data_id": 854
    },
    {
        "id": "task1510-7bd6c4d5b7d24d7091af3841418afcea",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] artist is a kind of person\n [OUT] ",
        "output": "artist IsA person",
        "data_id": 855
    },
    {
        "id": "task1510-3f0d19703a2b4b3299731aadb4b8a04f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america is a kind of democracy\n [OUT] ",
        "output": "america IsA democracy",
        "data_id": 856
    },
    {
        "id": "task1510-c24a6398e2994052908e0f4a37fac928",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beach can have or can contain sand\n [OUT] ",
        "output": "beach HasA sand",
        "data_id": 857
    },
    {
        "id": "task1510-fa05f8a860b047628f659f0001f3785b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blade is part of scissor\n [OUT] ",
        "output": "blade PartOf scissor",
        "data_id": 858
    },
    {
        "id": "task1510-8b5feaf71b584d989935d15ffb176786",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark is a kind of noise\n [OUT] ",
        "output": "bark IsA noise",
        "data_id": 859
    },
    {
        "id": "task1510-8b16f83310c34fdfb022049095978981",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can be characterized by square\n [OUT] ",
        "output": "bedroom HasProperty square",
        "data_id": 860
    },
    {
        "id": "task1510-ff759246733c4d24baf28f7659a375f6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow can be used as the opposite of suck\n [OUT] ",
        "output": "blow Antonym suck",
        "data_id": 861
    },
    {
        "id": "task1510-af2830ad7877479fbf5ff549a19cc6dd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by yellow\n [OUT] ",
        "output": "apple HasProperty yellow",
        "data_id": 862
    },
    {
        "id": "task1510-367ba52ebabb47f38bcb756e0f4cc666",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by innocent\n [OUT] ",
        "output": "baby HasProperty innocent",
        "data_id": 863
    },
    {
        "id": "task1510-35e3bc514a884904896b2793a7abf578",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be used as the opposite of muscle\n [OUT] ",
        "output": "bone Antonym muscle",
        "data_id": 864
    },
    {
        "id": "task1510-5a903568149a4bb2935eecb042fbabf4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] big can be used as the opposite of young\n [OUT] ",
        "output": "big Antonym young",
        "data_id": 865
    },
    {
        "id": "task1510-bf30a9c5f6e346328b53cedba78ce64e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by tasty\n [OUT] ",
        "output": "apple HasProperty tasty",
        "data_id": 866
    },
    {
        "id": "task1510-0c35daf1d035416b8ffdc40ff41a80b5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure can be used as the opposite of boredom\n [OUT] ",
        "output": "adventure Antonym boredom",
        "data_id": 867
    },
    {
        "id": "task1510-28f1f81acc8248669aef5219e8c84c1d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ascend can be used with the same meaning of rise\n [OUT] ",
        "output": "ascend Synonym rise",
        "data_id": 868
    },
    {
        "id": "task1510-4b4c96ea9bb74ca4978d7ca3cb556d82",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bark is part of trunk\n [OUT] ",
        "output": "bark PartOf trunk",
        "data_id": 869
    },
    {
        "id": "task1510-cc34977689a04c89befbcbe74387550e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be characterized by nice\n [OUT] ",
        "output": "baby HasProperty nice",
        "data_id": 870
    },
    {
        "id": "task1510-d3f2fe746e5043f0b0e38690a4c1cf4b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Bowl is made of wood\n [OUT] ",
        "output": "bowl MadeOf wood",
        "data_id": 871
    },
    {
        "id": "task1510-75d88beea01043a18def1b0a2c9c110d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butter is a kind of fat\n [OUT] ",
        "output": "butter IsA fat",
        "data_id": 872
    },
    {
        "id": "task1510-95eb5c73295f4dbf8ebcb4c2245ae134",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boy can be characterized by male\n [OUT] ",
        "output": "boy HasProperty male",
        "data_id": 873
    },
    {
        "id": "task1510-52cad08c839e4134be22d913313191d9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arch is a kind of form\n [OUT] ",
        "output": "arch IsA form",
        "data_id": 874
    },
    {
        "id": "task1510-ca0298458f5c4a9f8f09519fab0afc72",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adult can be used with the same meaning of grow_up\n [OUT] ",
        "output": "adult Synonym grow_up",
        "data_id": 875
    },
    {
        "id": "task1510-7704ec31bc324e4fa7ca08b2f934181f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] both can be used as the opposite of one\n [OUT] ",
        "output": "both Antonym one",
        "data_id": 876
    },
    {
        "id": "task1510-57707a40e9a44513a17e382460f3bb8c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss can be characterized by demand\n [OUT] ",
        "output": "boss HasProperty demand",
        "data_id": 877
    },
    {
        "id": "task1510-1eea382d883341149c97c092fabfbd74",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] branch can be used as the opposite of join\n [OUT] ",
        "output": "branch Antonym join",
        "data_id": 878
    },
    {
        "id": "task1510-1d0c5effdfd9425e81005f3e00694ca5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] baby can be used with the same meaning of love\n [OUT] ",
        "output": "baby Synonym love",
        "data_id": 879
    },
    {
        "id": "task1510-d9a265671d2746ec994650fde53afa56",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can be characterized by unique\n [OUT] ",
        "output": "body HasProperty unique",
        "data_id": 880
    },
    {
        "id": "task1510-141c55a8f856433fbf99d299015427c7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple is a kind of computer\n [OUT] ",
        "output": "apple IsA computer",
        "data_id": 881
    },
    {
        "id": "task1510-21eaa790731b410580df568caf1e2722",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bias is a kind of prejudice\n [OUT] ",
        "output": "bias IsA prejudice",
        "data_id": 882
    },
    {
        "id": "task1510-52ad0d9346f74d42b70ed57f1004340d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] body can be used as the opposite of soul\n [OUT] ",
        "output": "body Antonym soul",
        "data_id": 883
    },
    {
        "id": "task1510-b22ad2b8c2d94963808e20b88f2a447c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blade is part of ax\n [OUT] ",
        "output": "blade PartOf ax",
        "data_id": 884
    },
    {
        "id": "task1510-96780bab85084434b03188809b19487c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] asia can be characterized by large\n [OUT] ",
        "output": "asia HasProperty large",
        "data_id": 885
    },
    {
        "id": "task1510-ff703da1691d4ca39a829c416493d364",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] banana can have or can contain peel\n [OUT] ",
        "output": "banana HasA peel",
        "data_id": 886
    },
    {
        "id": "task1510-fcbdfa263fee4c1da362c3401648a0fe",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beach is part of shore\n [OUT] ",
        "output": "beach PartOf shore",
        "data_id": 887
    },
    {
        "id": "task1510-cf3a9e19f1e94284bb247451e05a8cb7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be used as the opposite of person\n [OUT] ",
        "output": "animal Antonym person",
        "data_id": 888
    },
    {
        "id": "task1510-2a1663bd76dd4efe8cd433b90b437ae6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] buy can be used as the opposite of sell\n [OUT] ",
        "output": "buy Antonym sell",
        "data_id": 889
    },
    {
        "id": "task1510-06f1dd9ad5ac44c392001f9c31ae0fba",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by interest\n [OUT] ",
        "output": "book HasProperty interest",
        "data_id": 890
    },
    {
        "id": "task1510-c5845f7305604ad58928fedf618706c7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bell can be characterized by annoy\n [OUT] ",
        "output": "bell HasProperty annoy",
        "data_id": 891
    },
    {
        "id": "task1510-d85beb7671954fba8345f4aeaa937fd4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can have or can contain fur\n [OUT] ",
        "output": "animal HasA fur",
        "data_id": 892
    },
    {
        "id": "task1510-3f158b16254445c1ac3901495b33f39a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brick can be characterized by heavy\n [OUT] ",
        "output": "brick HasProperty heavy",
        "data_id": 893
    },
    {
        "id": "task1510-dd44b5355d7b4562b1f3a663285c4c6d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird is part of flock\n [OUT] ",
        "output": "bird PartOf flock",
        "data_id": 894
    },
    {
        "id": "task1510-95a874baf2074b1aaa1a32f4a0cb247b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure is a kind of game\n [OUT] ",
        "output": "adventure IsA game",
        "data_id": 895
    },
    {
        "id": "task1510-deec4b53eace40ababcc58929db09527",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blood can be characterized by red\n [OUT] ",
        "output": "blood HasProperty red",
        "data_id": 896
    },
    {
        "id": "task1510-4dd6a11be0e94885a99d629baea39a33",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boat is made of steel\n [OUT] ",
        "output": "boat MadeOf steel",
        "data_id": 897
    },
    {
        "id": "task1510-174dedf924d6405eb9ca4cf753b2a27b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bush can have or can contain leave\n [OUT] ",
        "output": "bush HasA leave",
        "data_id": 898
    },
    {
        "id": "task1510-eb2553fb002b4bd7b8ad08b627362df1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ascend can be used with the same meaning of climb\n [OUT] ",
        "output": "ascend Synonym climb",
        "data_id": 899
    },
    {
        "id": "task1510-f79be2f5ac9e4a79bc5e6d7c02348105",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blue is a kind of music\n [OUT] ",
        "output": "blue IsA music",
        "data_id": 900
    },
    {
        "id": "task1510-7e00849fdf54445f8686812e52f7ee17",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can be characterized by small\n [OUT] ",
        "output": "apple HasProperty small",
        "data_id": 901
    },
    {
        "id": "task1510-8062d186b7dc45ccb209dbb739ac6b42",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance can be used with the same meaning of account\n [OUT] ",
        "output": "balance Synonym account",
        "data_id": 902
    },
    {
        "id": "task1510-df0a5f54777249bc8e5c968e4b5ee97e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balloon can be characterized by rubber\n [OUT] ",
        "output": "balloon HasProperty rubber",
        "data_id": 903
    },
    {
        "id": "task1510-895004f233be414b8de9b593f99a0e0f",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be used as the opposite of mineral\n [OUT] ",
        "output": "animal Antonym mineral",
        "data_id": 904
    },
    {
        "id": "task1510-84e4ad7386b74c53ad6818f6504fe791",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball is a kind of sport\n [OUT] ",
        "output": "ball IsA sport",
        "data_id": 905
    },
    {
        "id": "task1510-f8c42a6ed6764b5689da4355da104171",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brain can be characterized by complex\n [OUT] ",
        "output": "brain HasProperty complex",
        "data_id": 906
    },
    {
        "id": "task1510-50704781df4c4f168042390cb1bc3ae8",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black is a kind of clothe\n [OUT] ",
        "output": "black IsA clothe",
        "data_id": 907
    },
    {
        "id": "task1510-2bcaf35b1916476d9661fbd69420faeb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] battle is part of war\n [OUT] ",
        "output": "battle PartOf war",
        "data_id": 908
    },
    {
        "id": "task1510-e86ec90ead684846832e00957aacacb9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bull can have or can contain horn\n [OUT] ",
        "output": "bull HasA horn",
        "data_id": 909
    },
    {
        "id": "task1510-66213b1adc044eb5a155feedecd49a30",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] build is a kind of creation\n [OUT] ",
        "output": "build IsA creation",
        "data_id": 910
    },
    {
        "id": "task1510-4ba40f48d446487b8386216e4e28b035",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can have or can contain pressure\n [OUT] ",
        "output": "air HasA pressure",
        "data_id": 911
    },
    {
        "id": "task1510-ef8c2f5c77fe4c9c8c3f5ba864737f2b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of join\n [OUT] ",
        "output": "break Antonym join",
        "data_id": 912
    },
    {
        "id": "task1510-d6c8e4619ee44b3a8fe02b9c063a8f43",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butch can be used with the same meaning of kill\n [OUT] ",
        "output": "butch Synonym kill",
        "data_id": 913
    },
    {
        "id": "task1510-f2308e648f784ddd824157e350d1e777",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bread can be characterized by white\n [OUT] ",
        "output": "bread HasProperty white",
        "data_id": 914
    },
    {
        "id": "task1510-42a3bffeb31c4ff7aaea45a97494807e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affection is a kind of feel\n [OUT] ",
        "output": "affection IsA feel",
        "data_id": 915
    },
    {
        "id": "task1510-40d91b3461214ac6afce872cb9eb29b9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach can be used with the same meaning of fasten\n [OUT] ",
        "output": "attach Synonym fasten",
        "data_id": 916
    },
    {
        "id": "task1510-d6228d8834d649db9da38a3d2e199139",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boss is a kind of human\n [OUT] ",
        "output": "boss IsA human",
        "data_id": 917
    },
    {
        "id": "task1510-68b2a157349d4afcbc4924da04886f20",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] arch is a kind of build\n [OUT] ",
        "output": "arch IsA build",
        "data_id": 918
    },
    {
        "id": "task1510-c241b0e164ca413bb3101f6e0f7ea4a7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blow is a kind of spend\n [OUT] ",
        "output": "blow IsA spend",
        "data_id": 919
    },
    {
        "id": "task1510-ba01e1ddd78f4eef8853fb23e9451c7a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] add can be used as the opposite of take\n [OUT] ",
        "output": "add Antonym take",
        "data_id": 920
    },
    {
        "id": "task1510-b9feb978d5c9468595594aba570ca295",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] adventure can be used as the opposite of safe\n [OUT] ",
        "output": "adventure Antonym safe",
        "data_id": 921
    },
    {
        "id": "task1510-dd6b6d891ad5445aaf6489a826e9f8f3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bolt can be used as the opposite of nut\n [OUT] ",
        "output": "bolt Antonym nut",
        "data_id": 922
    },
    {
        "id": "task1510-268d8520ad544f6e946add53a4535d5c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apartment can have or can contain door\n [OUT] ",
        "output": "apartment HasA door",
        "data_id": 923
    },
    {
        "id": "task1510-1751082a793b427b8fd23300328c4da9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bin can be used with the same meaning of container\n [OUT] ",
        "output": "bin Synonym container",
        "data_id": 924
    },
    {
        "id": "task1510-bdaeb90712b7479bbb9dd2940f386426",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] ball can be used with the same meaning of globe\n [OUT] ",
        "output": "ball Synonym globe",
        "data_id": 925
    },
    {
        "id": "task1510-0e7d5476d1cb40018a3560b7ce796fae",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of connect\n [OUT] ",
        "output": "break Antonym connect",
        "data_id": 926
    },
    {
        "id": "task1510-63655fc85bd34d49bb219f9c8b0a5d12",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] brick can be characterized by hard\n [OUT] ",
        "output": "brick HasProperty hard",
        "data_id": 927
    },
    {
        "id": "task1510-c30f82ad718840fa9891ffc3e264de18",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bit can be used with the same meaning of part\n [OUT] ",
        "output": "bit Synonym part",
        "data_id": 928
    },
    {
        "id": "task1510-2d7f0992984e4b5da3fcd7c24ca4fb6b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] black can be characterized by dark\n [OUT] ",
        "output": "black HasProperty dark",
        "data_id": 929
    },
    {
        "id": "task1510-6e353591a818431ca3fa6ec02dc5ee82",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boyfriend can be used as the opposite of girl\n [OUT] ",
        "output": "boyfriend Antonym girl",
        "data_id": 930
    },
    {
        "id": "task1510-1403728f77e64ba9998b2e784b72070b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] attach is a kind of touch\n [OUT] ",
        "output": "attach IsA touch",
        "data_id": 931
    },
    {
        "id": "task1510-ff7f3078b64e456bbfc30c9b2d84f3bc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] benefit can be used with the same meaning of help\n [OUT] ",
        "output": "benefit Synonym help",
        "data_id": 932
    },
    {
        "id": "task1510-52e1ec27a35e44ca8d7c961db5035483",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] affection can be used with the same meaning of love\n [OUT] ",
        "output": "affection Synonym love",
        "data_id": 933
    },
    {
        "id": "task1510-9d197abe37934a33b905db35dece81b2",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] banana can be characterized by yellow\n [OUT] ",
        "output": "banana HasProperty yellow",
        "data_id": 934
    },
    {
        "id": "task1510-58023268b519425e83a04bd243f815c7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] all can be used as the opposite of nobody\n [OUT] ",
        "output": "all Antonym nobody",
        "data_id": 935
    },
    {
        "id": "task1510-01fc2880535f4f1192ceccb0d002b367",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bell is part of phone\n [OUT] ",
        "output": "bell PartOf phone",
        "data_id": 936
    },
    {
        "id": "task1510-2ee350d79764469d92a8ff78fb12eeda",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] beach is a kind of place\n [OUT] ",
        "output": "beach IsA place",
        "data_id": 937
    },
    {
        "id": "task1510-d93fd90e75184599a2208328b316f8d4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be characterized by read\n [OUT] ",
        "output": "book HasProperty read",
        "data_id": 938
    },
    {
        "id": "task1510-f53e475d1eb74d6089001aa687839245",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] actress is a kind of person\n [OUT] ",
        "output": "actress IsA person",
        "data_id": 939
    },
    {
        "id": "task1510-ffc9b7af11d14bd8a0bb17171589f705",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can be used as the opposite of circle\n [OUT] ",
        "output": "box Antonym circle",
        "data_id": 940
    },
    {
        "id": "task1510-200249c5b5f6453db711bb3917053eeb",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] artist is a kind of human\n [OUT] ",
        "output": "artist IsA human",
        "data_id": 941
    },
    {
        "id": "task1510-573d76940020482eaee9f5f4c377803e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can have or can contain tail\n [OUT] ",
        "output": "bird HasA tail",
        "data_id": 942
    },
    {
        "id": "task1510-bad275182de34462afd5c8c6eab4faf5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad can be used as the opposite of true\n [OUT] ",
        "output": "bad Antonym true",
        "data_id": 943
    },
    {
        "id": "task1510-a4b5139ad6234f25b902a8155f57475a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] branch is part of tree\n [OUT] ",
        "output": "branch PartOf tree",
        "data_id": 944
    },
    {
        "id": "task1510-b94ca25f9bc54f7fbf133d2638739e23",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] balance is part of account\n [OUT] ",
        "output": "balance PartOf account",
        "data_id": 945
    },
    {
        "id": "task1510-7ab2493c36d242209c53cbbe082387dd",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be used as the opposite of vacuum\n [OUT] ",
        "output": "air Antonym vacuum",
        "data_id": 946
    },
    {
        "id": "task1510-8522b1d929ae438d92571fa4fd69b770",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] banana is a kind of dessert\n [OUT] ",
        "output": "banana IsA dessert",
        "data_id": 947
    },
    {
        "id": "task1510-47922921b7db4bf7972b6d00e9a6aacc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] aid can be used with the same meaning of support\n [OUT] ",
        "output": "aid Synonym support",
        "data_id": 948
    },
    {
        "id": "task1510-e0974640cafb4340b402a1b58b3349f7",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] button is part of coat\n [OUT] ",
        "output": "button PartOf coat",
        "data_id": 949
    },
    {
        "id": "task1510-9efdf58ac8ea4a44b57773acd952f238",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] back is part of human\n [OUT] ",
        "output": "back PartOf human",
        "data_id": 950
    },
    {
        "id": "task1510-594f54730d3b49cfb4dcdce358e2147e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boot is a kind of shoe\n [OUT] ",
        "output": "boot IsA shoe",
        "data_id": 951
    },
    {
        "id": "task1510-4c83778e91b847059417f348e7da18ed",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can have or can contain juice\n [OUT] ",
        "output": "apple HasA juice",
        "data_id": 952
    },
    {
        "id": "task1510-883dc0e4ac7343a9bc19152d05205830",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] anger can be used with the same meaning of enrage\n [OUT] ",
        "output": "anger Synonym enrage",
        "data_id": 953
    },
    {
        "id": "task1510-5d9401bb5fa74e5cb4c1a2e3c4db90ab",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] burn is a kind of feel\n [OUT] ",
        "output": "burn IsA feel",
        "data_id": 954
    },
    {
        "id": "task1510-0f7d89b547be41e7ae1803ba6f44200e",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bad can be used as the opposite of benevolent\n [OUT] ",
        "output": "bad Antonym benevolent",
        "data_id": 955
    },
    {
        "id": "task1510-c8c2c6052ece460dac87882b30975bf3",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butter is a kind of food\n [OUT] ",
        "output": "butter IsA food",
        "data_id": 956
    },
    {
        "id": "task1510-ba546c5fcff64bdab42f365b5263cb68",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boil can be used as the opposite of freeze\n [OUT] ",
        "output": "boil Antonym freeze",
        "data_id": 957
    },
    {
        "id": "task1510-80b746535ff64b8999a4d91458854934",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] animal can be characterized by pure\n [OUT] ",
        "output": "animal HasProperty pure",
        "data_id": 958
    },
    {
        "id": "task1510-3cd2beb5c2c0406fa4ec5a84a54a552d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bowl is part of pipe\n [OUT] ",
        "output": "bowl PartOf pipe",
        "data_id": 959
    },
    {
        "id": "task1510-7b320c10a88c449f8a7ebb47b2578acc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book is part of page\n [OUT] ",
        "output": "book PartOf page",
        "data_id": 960
    },
    {
        "id": "task1510-3f4ed0a83dda4c10b25955a377175467",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] account can be used with the same meaning of score\n [OUT] ",
        "output": "account Synonym score",
        "data_id": 961
    },
    {
        "id": "task1510-f7138023ca3a4ed3bd5a71174428715b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] break can be used as the opposite of whole\n [OUT] ",
        "output": "break Antonym whole",
        "data_id": 962
    },
    {
        "id": "task1510-2488ae408570464b8f1b242388d28f87",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] box can be used with the same meaning of case\n [OUT] ",
        "output": "box Synonym case",
        "data_id": 963
    },
    {
        "id": "task1510-83fb4aaa430e4b209f42025fb49c9930",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] athlete is a kind of person\n [OUT] ",
        "output": "athlete IsA person",
        "data_id": 964
    },
    {
        "id": "task1510-073bb594eb224b518bd262be1b943518",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by color\n [OUT] ",
        "output": "bird HasProperty color",
        "data_id": 965
    },
    {
        "id": "task1510-cab02ecc9ca2492bbde9b0f11902e81b",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bathtub is a kind of vessel\n [OUT] ",
        "output": "bathtub IsA vessel",
        "data_id": 966
    },
    {
        "id": "task1510-56e2378c7a994f2eb980ff55257ea108",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] Apple is a kind of tree\n [OUT] ",
        "output": "apple IsA tree",
        "data_id": 967
    },
    {
        "id": "task1510-cec5bcaf501645fbbad53fff344a7e89",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basket is made of plastic\n [OUT] ",
        "output": "basket MadeOf plastic",
        "data_id": 968
    },
    {
        "id": "task1510-9a047b739a9a4551a0d08b8838896639",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] butterfly can have or can contain wing\n [OUT] ",
        "output": "butterfly HasA wing",
        "data_id": 969
    },
    {
        "id": "task1510-dc2b098a05824d6ab2383833bb589575",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] boil is a kind of cook\n [OUT] ",
        "output": "boil IsA cook",
        "data_id": 970
    },
    {
        "id": "task1510-24d5515f7aac42c09323c07d57ba61ec",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blood is a kind of liquid\n [OUT] ",
        "output": "blood IsA liquid",
        "data_id": 971
    },
    {
        "id": "task1510-6483243b80224bc7809c05b1cf533511",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bone can be used as the opposite of blood\n [OUT] ",
        "output": "bone Antonym blood",
        "data_id": 972
    },
    {
        "id": "task1510-906fd431b09b43f08b76e13fcb9ac66d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] appear can be used with the same meaning of be\n [OUT] ",
        "output": "appear Synonym be",
        "data_id": 973
    },
    {
        "id": "task1510-2edf424101c840c69f75595aa72d819a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bicycle can have or can contain seat\n [OUT] ",
        "output": "bicycle HasA seat",
        "data_id": 974
    },
    {
        "id": "task1510-021d7ac89fc749c7bf42296a1995c4dc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of play\n [OUT] ",
        "output": "action Synonym play",
        "data_id": 975
    },
    {
        "id": "task1510-5b9da366aba34d3590e0426bffc6cd14",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can have or can contain eye\n [OUT] ",
        "output": "bird HasA eye",
        "data_id": 976
    },
    {
        "id": "task1510-0d6846ff0257454391a10fd53867e65d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bedroom can have or can contain window\n [OUT] ",
        "output": "bedroom HasA window",
        "data_id": 977
    },
    {
        "id": "task1510-abb20bf118a84476aee65eed5740e50a",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] argument is part of conclusion\n [OUT] ",
        "output": "argument PartOf conclusion",
        "data_id": 978
    },
    {
        "id": "task1510-9e34647c4f964159b3a13c6330c8ed61",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] apple can have or can contain skin\n [OUT] ",
        "output": "apple HasA skin",
        "data_id": 979
    },
    {
        "id": "task1510-1a33a092771f4495b54b2e2f367dcdb1",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can be characterized by clear\n [OUT] ",
        "output": "air HasProperty clear",
        "data_id": 980
    },
    {
        "id": "task1510-c129e8b33578408a85b4350dcffa0489",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action is a kind of act\n [OUT] ",
        "output": "action IsA act",
        "data_id": 981
    },
    {
        "id": "task1510-e987a872f1344b08bffea217540253b9",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action is a kind of play\n [OUT] ",
        "output": "action IsA play",
        "data_id": 982
    },
    {
        "id": "task1510-f64f793fea66431caf02dfee909c18aa",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] basketball can be characterized by orange\n [OUT] ",
        "output": "basketball HasProperty orange",
        "data_id": 983
    },
    {
        "id": "task1510-0b4febd643844cd787914deea584f245",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bird can be characterized by feather\n [OUT] ",
        "output": "bird HasProperty feather",
        "data_id": 984
    },
    {
        "id": "task1510-199a20f15c2040558d3c1bbf0b5387af",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] agreement can be used with the same meaning of contract\n [OUT] ",
        "output": "agreement Synonym contract",
        "data_id": 985
    },
    {
        "id": "task1510-f71e5df096d4497caf0f73c1b53c3b70",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bend can be used with the same meaning of flex\n [OUT] ",
        "output": "bend Synonym flex",
        "data_id": 986
    },
    {
        "id": "task1510-e6959a00af934fc99ddd09be6df90fe4",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] bridge is made of steel\n [OUT] ",
        "output": "bridge MadeOf steel",
        "data_id": 987
    },
    {
        "id": "task1510-056745bda28e459aaab859b2db8040f5",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain idea\n [OUT] ",
        "output": "book HasA idea",
        "data_id": 988
    },
    {
        "id": "task1510-170d8107e1f54a6f8711e9fe61c59840",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] board is made of wood\n [OUT] ",
        "output": "board MadeOf wood",
        "data_id": 989
    },
    {
        "id": "task1510-92335eb437024bf5b87e20c4aaa96cba",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] air can have or can contain weight\n [OUT] ",
        "output": "air HasA weight",
        "data_id": 990
    },
    {
        "id": "task1510-bac8df7417b44f958784dbe33bb6b44d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can be used with the same meaning of record\n [OUT] ",
        "output": "book Synonym record",
        "data_id": 991
    },
    {
        "id": "task1510-d9d87c62fec54e6d971b17900344b237",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] america can have or can contain flag\n [OUT] ",
        "output": "america HasA flag",
        "data_id": 992
    },
    {
        "id": "task1510-4528374a57654f6c8a4b2962018c50f6",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] approach is a kind of address\n [OUT] ",
        "output": "approach IsA address",
        "data_id": 993
    },
    {
        "id": "task1510-4b01a647c8444060ba1dceb711bd265c",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] army can be used as the opposite of marine\n [OUT] ",
        "output": "army Antonym marine",
        "data_id": 994
    },
    {
        "id": "task1510-a69d95ef450e40f8b6149e7d5c8058be",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] assemble is a kind of make\n [OUT] ",
        "output": "assemble IsA make",
        "data_id": 995
    },
    {
        "id": "task1510-6ad847a2458f4fa5a8cdbc7505b62b98",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] book can have or can contain information\n [OUT] ",
        "output": "book HasA information",
        "data_id": 996
    },
    {
        "id": "task1510-360b116d38784704ad15f485843a4a24",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] action can be used with the same meaning of movement\n [OUT] ",
        "output": "action Synonym movement",
        "data_id": 997
    },
    {
        "id": "task1510-3420b2e05e2f491f8e548460cc81f48d",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] airplane is a kind of transportation\n [OUT] ",
        "output": "airplane IsA transportation",
        "data_id": 998
    },
    {
        "id": "task1510-b53d72f03f884388bf2e4b3e422ddacc",
        "input": "[INS] Given a phrase describing the relationship between two words, extract the words and the lexical relationship between them. The relation has to be of the type 'MemberOf', 'MadeOf', 'Synonym', 'Entails', 'HasA', 'HasProperty', 'PartOf', 'Antonym' or 'IsA'. The output should have the format: word1 relation word2.\n [IN] blade can be used as the opposite of handle\n [OUT] ",
        "output": "blade Antonym handle",
        "data_id": 999
    }
]